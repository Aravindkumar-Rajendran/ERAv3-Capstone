{"version":3,"sources":["components/quiz/MCQQuiz.tsx","components/quiz/TrueFalseQuiz.tsx","components/quiz/FillBlanksQuiz.tsx","components/quiz/MatchFollowingQuiz.tsx","components/QuizComponent.tsx","components/timeline/TimelineComponent.tsx","components/mindmap/MindmapComponent.tsx","components/flashcard/FlashcardComponent.tsx","pages/WhizardPage.tsx","pages/InteractivePage.tsx","App.tsx","index.tsx"],"names":["MCQQuiz","_ref","questions","theme","onComplete","currentQuestionIndex","setCurrentQuestionIndex","useState","questionStates","setQuestionStates","map","selectedAnswer","isAnswered","showFeedback","isCorrect","showHint","isFirstAttempt","score","stars","setStars","showStarAnimation","setShowStarAnimation","sadEmojis","setSadEmojis","showSadAnimation","setShowSadAnimation","isCompleted","setIsCompleted","currentQuestion","currentState","updateQuestionState","updates","prev","newStates","_objectSpread","triggerStarAnimation","newStars","Array","from","length","_","i","Math","random","setTimeout","triggerSadAnimation","newSadEmojis","calculateTotalScore","reduce","sum","state","getScoreRating","total","percentage","totalScore","round","_jsxs","style","background","minHeight","borderRadius","padding","color","fontFamily","textAlign","display","flexDirection","justifyContent","alignItems","children","_jsx","fontSize","marginBottom","margin","backgroundColor","backdropFilter","fontWeight","width","maxWidth","q","index","borderBottom","gap","onClick","border","cursor","boxShadow","transition","onMouseEnter","e","currentTarget","transform","onMouseLeave","window","location","reload","concat","primaryColor","secondaryColor","textColor","position","overflow","top","left","height","pointerEvents","zIndex","animation","WebkitBackgroundClip","WebkitTextFillColor","textShadow","opacity","lineHeight","question","options","option","optionStyle","correctAnswer","optionIndex","correct","points","handleAnswerSelect","minWidth","marginRight","String","fromCharCode","marginLeft","explanation","hint","getIndirectHint","questionText","toLowerCase","includes","retryAfterHint","handlePrevious","disabled","handleNext","TrueFalseQuiz","answered","usedHint","setShowHint","handleAnswer","answer","marginTop","toFixed","statement","fontStyle","handleHint","handleFinish","every","FillBlanksQuiz","userAnswer","currentInput","setCurrentInput","calculateSimilarity","str1","str2","longer","shorter","distance","levenshteinDistance","matrix","fill","j","indicator","min","handleSubmit","trim","validateAnswer","userInput","correctAnswers","normalizedInput","some","normalizedCorrect","numberWordMap","num","words","Object","entries","React","useEffect","sentence","parts","split","textDecoration","renderSentenceWithBlank","flexWrap","type","value","onChange","target","placeholder","onKeyPress","key","outline","join","MatchFollowingQuiz","selectedPairs","setSelectedPairs","lockedLeftItems","setLockedLeftItems","lockedRightItems","setLockedRightItems","selectedLeft","setSelectedLeft","isSubmitted","setIsSubmitted","showResults","setShowResults","setScore","leftItems","pairs","rightItems","sort","instruction","gridTemplateColumns","item","isLocked","id","isSelected","handleLeftClick","leftItem","borderColor","canSelect","rightItem","find","newPair","leftId","rightId","leftText","rightText","right","handleRightClick","pair","correctItem","correctPairs","filter","handleRetry","QuizComponent","quizData","isOpen","onClose","handleComplete","totalQuestions","className","bottom","maxHeight","title","description","renderQuizBySubtype","subtype","TimelineRejectionComponent","message","TimelineComponent","_ref2","timelineData","currentEventIndex","setCurrentEventIndex","error","currentEvent","events","totalEvents","formatDate","dateString","Date","toLocaleDateString","year","month","day","importance","getImportanceColor","textTransform","date","endDate","category","paddingTop","borderTop","getAllNodes","nodes","allNodes","traverse","nodeList","forEach","node","push","MindmapComponent","mindmapData","selectedNodeId","setSelectedNodeId","getInitialExpandedNodes","expanded","Set","add","expandedNodes","setExpandedNodes","viewedNodes","setViewedNodes","findNodeById","found","selectNode","nodeId","selectedNode","totalNodes","exploredNodes","size","renderNode","_node$children","level","arguments","undefined","isExpanded","has","hasChildren","stopPropagation","newExpanded","delete","toggleNode","label","child","flex","paddingLeft","connections","conn","to","_findNodeById","_findNodeById2","FlashcardComponent","flashcardData","currentCardIndex","setCurrentCardIndex","isFlipped","setIsFlipped","studiedCards","setStudiedCards","currentCard","cards","totalCards","handleFlip","perspective","transformStyle","backfaceVisibility","front","difficulty","getDifficultyColor","tags","tag","back","handleShowHint","newSet","WhizardPage","userContent","setUserContent","selectedFile","setSelectedFile","showOptions","setShowOptions","activeQuiz","setActiveQuiz","isQuizOpen","setIsQuizOpen","activeTimeline","setActiveTimeline","isTimelineOpen","setIsTimelineOpen","activeMindmap","setActiveMindmap","isMindmapOpen","setIsMindmapOpen","activeFlashcard","setActiveFlashcard","isFlashcardOpen","setIsFlashcardOpen","isGenerating","setIsGenerating","conversationId","setConversationId","topics","setTopics","selectedTopics","setSelectedTopics","showTopics","setShowTopics","handleOptionClick","async","formData","FormData","append","topic","response","fetch","method","body","ok","Error","status","result","json","quiz_data","console","alert","dummyQuizResponse","generateDummyQuizJSON","handleGenerateQuiz","timeline_data","handleGenerateTimeline","mindmap_data","handleGenerateMindmap","flashcard_data","handleGenerateFlashcard","currentQuizIndex","setCurrentQuizIndex","subtypes","currentSubtype","baseTheme","resize","onDragOver","preventDefault","onDrop","files","dataTransfer","accept","htmlFor","name","uploadResponse","convId","conversation_id","topicsFormData","topicsResponse","topicsResult","handleReset","t","handleTopicSelection","icon","onMouseOver","onMouseOut","handleQuizClose","handleQuizComplete","handleTimelineClose","handleTimelineComplete","handleMindmapClose","handleMindmapComplete","handleFlashcardClose","handleFlashcardComplete","InteractivePage","mcqQuizData","trueFalseQuizData","iconSet","fillBlanksQuizData","matchFollowingQuizData","handleQuizSelect","App","Router","Routes","Route","path","element","rootElement","document","getElementById","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.146b8157.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MCQQuestion, Theme } from '../../types/quiz';\r\n\r\ninterface QuestionState {\r\n  selectedAnswer: number | null;\r\n  isAnswered: boolean;\r\n  showFeedback: boolean;\r\n  isCorrect: boolean;\r\n  showHint: boolean;\r\n  isFirstAttempt: boolean;\r\n  score: number;\r\n}\r\n\r\ninterface MCQQuizProps {\r\n  questions: MCQQuestion[];\r\n  theme: Theme;\r\n  onComplete: (score: number, totalQuestions: number) => void;\r\n}\r\n\r\nexport const MCQQuiz: React.FC<MCQQuizProps> = ({ questions, theme, onComplete }) => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [questionStates, setQuestionStates] = useState<QuestionState[]>(() => \r\n    questions.map(() => ({\r\n      selectedAnswer: null,\r\n      isAnswered: false,\r\n      showFeedback: false,\r\n      isCorrect: false,\r\n      showHint: false,\r\n      isFirstAttempt: true,\r\n      score: 0\r\n    }))\r\n  );\r\n  const [stars, setStars] = useState<number[]>([]);\r\n  const [showStarAnimation, setShowStarAnimation] = useState(false);\r\n  const [sadEmojis, setSadEmojis] = useState<number[]>([]);\r\n  const [showSadAnimation, setShowSadAnimation] = useState(false);\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n  const currentState = questionStates[currentQuestionIndex];\r\n\r\n  const updateQuestionState = (updates: Partial<QuestionState>) => {\r\n    setQuestionStates(prev => {\r\n      const newStates = [...prev];\r\n      newStates[currentQuestionIndex] = { ...newStates[currentQuestionIndex], ...updates };\r\n      return newStates;\r\n    });\r\n  };\r\n\r\n  const handleAnswerSelect = (optionIndex: number) => {\r\n    if (currentState.isAnswered) return;\r\n    \r\n    const correct = optionIndex === currentQuestion.correctAnswer;\r\n    \r\n    updateQuestionState({\r\n      selectedAnswer: optionIndex,\r\n      isAnswered: true,\r\n      isCorrect: correct,\r\n      showFeedback: true\r\n    });\r\n    \r\n    if (correct) {\r\n      // Correct answer - give points based on attempt\r\n      const points = currentState.isFirstAttempt ? 1 : 0.5;\r\n      updateQuestionState({ score: points });\r\n      triggerStarAnimation();\r\n    } else {\r\n      // Wrong answer - trigger sad animation\r\n      triggerSadAnimation();\r\n      if (currentState.isFirstAttempt) {\r\n        // First wrong attempt - show hint and allow retry\r\n        updateQuestionState({ showHint: true });\r\n      } else {\r\n        // Second wrong attempt - give 0 points\r\n        updateQuestionState({ score: 0 });\r\n      }\r\n    }\r\n  };\r\n\r\n  const triggerStarAnimation = () => {\r\n    setShowStarAnimation(true);\r\n    const newStars = Array.from({ length: 5 }, (_, i) => Math.random() * 100);\r\n    setStars(newStars);\r\n    setTimeout(() => setShowStarAnimation(false), 2000);\r\n  };\r\n\r\n  const triggerSadAnimation = () => {\r\n    setShowSadAnimation(true);\r\n    const newSadEmojis = Array.from({ length: 4 }, (_, i) => Math.random() * 100);\r\n    setSadEmojis(newSadEmojis);\r\n    setTimeout(() => setShowSadAnimation(false), 2000);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(prev => prev + 1);\r\n    } else {\r\n      // Quiz completed\r\n      const totalScore = questionStates.reduce((sum, state) => sum + state.score, 0);\r\n      setIsCompleted(true);\r\n      onComplete(totalScore, questions.length);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(prev => prev - 1);\r\n    }\r\n  };\r\n\r\n  const retryAfterHint = () => {\r\n    updateQuestionState({\r\n      showHint: false,\r\n      isAnswered: false,\r\n      selectedAnswer: null,\r\n      showFeedback: false,\r\n      isFirstAttempt: false\r\n    });\r\n  };\r\n\r\n  // Generate indirect hints based on the question\r\n  const getIndirectHint = () => {\r\n    const questionText = currentQuestion.question.toLowerCase();\r\n    if (questionText.includes('ocean')) {\r\n      return \"Think about the ocean that covers the largest area on our planet.\";\r\n    } else if (questionText.includes('japan')) {\r\n      return \"This city is known for its bustling streets and neon lights.\";\r\n    } else if (questionText.includes('planet') && questionText.includes('red')) {\r\n      return \"This planet appears reddish due to iron oxide on its surface.\";\r\n    } else if (questionText.includes('romeo')) {\r\n      return \"This famous playwright wrote many tragedies and comedies.\";\r\n    } else if (questionText.includes('atmosphere')) {\r\n      return \"This gas makes up the majority of the air we breathe.\";\r\n    } else {\r\n      return \"Think carefully about the most logical answer.\";\r\n    }\r\n  };\r\n\r\n  const calculateTotalScore = () => {\r\n    return questionStates.reduce((sum, state) => sum + state.score, 0);\r\n  };\r\n\r\n  const getScoreRating = (score: number, total: number) => {\r\n    const percentage = (score / total) * 100;\r\n    if (percentage >= 90) return \"⭐⭐⭐ Outstanding!\";\r\n    if (percentage >= 80) return \"⭐⭐ Excellent!\";\r\n    if (percentage >= 70) return \"⭐ Good Job!\";\r\n    return \"Keep Learning!\";\r\n  };\r\n\r\n  if (isCompleted) {\r\n    const totalScore = calculateTotalScore();\r\n    const percentage = Math.round((totalScore / questions.length) * 100);\r\n    \r\n    return (\r\n      <div style={{\r\n        background: 'linear-gradient(135deg, #4CAF50 0%, #45a049 100%)',\r\n        minHeight: '600px',\r\n        borderRadius: '20px',\r\n        padding: '40px',\r\n        color: 'white',\r\n        fontFamily: 'Arial, sans-serif',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}>\r\n        <div style={{ fontSize: '60px', marginBottom: '20px' }}>🎉</div>\r\n        <h2 style={{ fontSize: '36px', margin: '0 0 20px 0' }}>Quiz Completed!</h2>\r\n        \r\n        <div style={{\r\n          backgroundColor: 'rgba(255,255,255,0.2)',\r\n          borderRadius: '15px',\r\n          padding: '30px',\r\n          marginBottom: '30px',\r\n          backdropFilter: 'blur(10px)'\r\n        }}>\r\n          <div style={{ fontSize: '24px', fontWeight: 'bold', marginBottom: '15px' }}>\r\n            Final Score: {totalScore} / {questions.length}\r\n          </div>\r\n          <div style={{ fontSize: '20px', marginBottom: '15px' }}>\r\n            Percentage: {percentage}%\r\n          </div>\r\n          <div style={{ fontSize: '22px', fontWeight: 'bold' }}>\r\n            {getScoreRating(totalScore, questions.length)}\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{\r\n          backgroundColor: 'rgba(255,255,255,0.1)',\r\n          borderRadius: '12px',\r\n          padding: '20px',\r\n          width: '100%',\r\n          maxWidth: '400px',\r\n          marginBottom: '30px'\r\n        }}>\r\n          <h4 style={{ margin: '0 0 15px 0' }}>Question Breakdown:</h4>\r\n          {questions.map((q, index) => (\r\n            <div key={index} style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n              padding: '8px 0',\r\n              borderBottom: index < questions.length - 1 ? '1px solid rgba(255,255,255,0.2)' : 'none'\r\n            }}>\r\n              <span>Question {index + 1}</span>\r\n              <span style={{ fontWeight: 'bold' }}>\r\n                {questionStates[index].score === 1 ? '1.0 ⭐' : \r\n                 questionStates[index].score === 0.5 ? '0.5 ⭐' : '0.0'}\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div style={{ display: 'flex', gap: '20px', justifyContent: 'center' }}>\r\n          <button\r\n            onClick={() => {\r\n              setIsCompleted(false);\r\n              setCurrentQuestionIndex(0);\r\n              setQuestionStates(questions.map(() => ({\r\n                selectedAnswer: null,\r\n                isAnswered: false,\r\n                showFeedback: false,\r\n                isCorrect: false,\r\n                showHint: false,\r\n                isFirstAttempt: true,\r\n                score: 0\r\n              })));\r\n            }}\r\n            style={{\r\n              backgroundColor: '#4caf50',\r\n              background: 'linear-gradient(45deg, #4caf50, #66bb6a)',\r\n              color: 'white',\r\n              border: 'none',\r\n              padding: '15px 30px',\r\n              borderRadius: '25px',\r\n              fontSize: '18px',\r\n              fontWeight: 'bold',\r\n              cursor: 'pointer',\r\n              boxShadow: '0 4px 15px rgba(76, 175, 80, 0.4)',\r\n              transition: 'transform 0.2s ease'\r\n            }}\r\n            onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n            onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n          >\r\n            🔄 Try Again\r\n          </button>\r\n          \r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            style={{\r\n              backgroundColor: '#2196f3',\r\n              background: 'linear-gradient(45deg, #2196f3, #21cbf3)',\r\n              color: 'white',\r\n              border: 'none',\r\n              padding: '15px 30px',\r\n              borderRadius: '25px',\r\n              fontSize: '18px',\r\n              fontWeight: 'bold',\r\n              cursor: 'pointer',\r\n              boxShadow: '0 4px 15px rgba(33, 150, 243, 0.4)',\r\n              transition: 'transform 0.2s ease'\r\n            }}\r\n            onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n            onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n          >\r\n            🏠 Back to Home\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      background: `linear-gradient(135deg, ${theme.primaryColor} 0%, ${theme.secondaryColor} 100%)`,\r\n      minHeight: '600px',\r\n      borderRadius: '20px',\r\n      padding: '30px',\r\n      color: theme.textColor,\r\n      fontFamily: theme.fontFamily,\r\n      position: 'relative',\r\n      overflow: 'hidden'\r\n    }}>\r\n      {/* Star Animation */}\r\n      {showStarAnimation && (\r\n        <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', pointerEvents: 'none', zIndex: 10 }}>\r\n          {stars.map((left, i) => (\r\n            <div\r\n              key={i}\r\n              style={{\r\n                position: 'absolute',\r\n                left: `${left}%`,\r\n                top: '20%',\r\n                fontSize: '30px',\r\n                animation: 'starFall 2s ease-out forwards',\r\n                color: '#ffd700'\r\n              }}\r\n            >\r\n              ⭐\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Sad Animation */}\r\n      {showSadAnimation && (\r\n        <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', pointerEvents: 'none', zIndex: 10 }}>\r\n          {sadEmojis.map((left, i) => (\r\n            <div\r\n              key={i}\r\n              style={{\r\n                position: 'absolute',\r\n                left: `${left}%`,\r\n                top: '20%',\r\n                fontSize: '30px',\r\n                animation: 'sadShake 2s ease-out forwards',\r\n                color: '#ff6b6b'\r\n              }}\r\n            >\r\n              😢\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Header */}\r\n      <div style={{ textAlign: 'center', marginBottom: '30px' }}>\r\n        <h2 style={{ \r\n          margin: 0, \r\n          fontSize: '28px', \r\n          background: 'linear-gradient(45deg, #ffd700, #ffed4e)',\r\n          WebkitBackgroundClip: 'text',\r\n          WebkitTextFillColor: 'transparent',\r\n          textShadow: '0 0 20px rgba(255, 215, 0, 0.3)'\r\n        }}>\r\n          Multiple Choice Quiz\r\n        </h2>\r\n        <p style={{ margin: '10px 0', opacity: 0.9 }}>\r\n          Question {currentQuestionIndex + 1} of {questions.length}\r\n        </p>\r\n        \r\n        {/* Progress Bar */}\r\n        <div style={{\r\n          width: '100%',\r\n          height: '8px',\r\n          backgroundColor: 'rgba(255,255,255,0.2)',\r\n          borderRadius: '4px',\r\n          overflow: 'hidden',\r\n          margin: '15px 0'\r\n        }}>\r\n          <div style={{\r\n            width: `${((currentQuestionIndex + 1) / questions.length) * 100}%`,\r\n            height: '100%',\r\n            background: 'linear-gradient(90deg, #4facfe, #00f2fe)',\r\n            borderRadius: '4px',\r\n            transition: 'width 0.3s ease'\r\n          }} />\r\n        </div>\r\n\r\n        {/* Score Display */}\r\n        <div style={{ fontSize: '18px', fontWeight: 'bold' }}>\r\n          Score: {calculateTotalScore()} / {questions.length} ⭐\r\n        </div>\r\n      </div>\r\n\r\n      {/* Question */}\r\n      <div style={{\r\n        backgroundColor: 'rgba(255,255,255,0.1)',\r\n        padding: '25px',\r\n        borderRadius: '15px',\r\n        marginBottom: '25px',\r\n        backdropFilter: 'blur(10px)'\r\n      }}>\r\n        <h3 style={{ \r\n          fontSize: '22px', \r\n          marginBottom: '25px',\r\n          lineHeight: '1.4',\r\n          color: '#ffffff',\r\n          fontWeight: 'bold',\r\n          textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\r\n        }}>\r\n          {currentQuestion.question}\r\n        </h3>\r\n\r\n        {/* Options */}\r\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\r\n          {currentQuestion.options.map((option, index) => {\r\n            let optionStyle: any = {\r\n              padding: '18px 25px',\r\n              borderRadius: '12px',\r\n              cursor: currentState.isAnswered ? 'default' : 'pointer',\r\n              transition: 'all 0.3s ease',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              fontSize: '16px',\r\n              fontWeight: '500',\r\n              border: '2px solid transparent',\r\n              position: 'relative'\r\n            };\r\n\r\n            if (!currentState.isAnswered) {\r\n              // Before answering\r\n              optionStyle = {\r\n                ...optionStyle,\r\n                backgroundColor: 'rgba(255,255,255,0.1)',\r\n                border: '2px solid rgba(255,255,255,0.3)'\r\n              };\r\n            } else {\r\n              // After answering - handle different cases\r\n              if (currentState.showHint && currentState.isFirstAttempt) {\r\n                // First wrong attempt - only highlight selected wrong answer\r\n                if (index === currentState.selectedAnswer) {\r\n                  optionStyle = {\r\n                    ...optionStyle,\r\n                    backgroundColor: '#f44336',\r\n                    border: '2px solid #ef5350',\r\n                    boxShadow: '0 4px 15px rgba(244, 67, 54, 0.4)'\r\n                  };\r\n                } else {\r\n                  // Other options - dimmed\r\n                  optionStyle = {\r\n                    ...optionStyle,\r\n                    backgroundColor: 'rgba(255,255,255,0.05)',\r\n                    border: '2px solid rgba(255,255,255,0.1)',\r\n                    opacity: 0.6\r\n                  };\r\n                }\r\n              } else {\r\n                // Show correct answer when: correct answer given, or second wrong attempt\r\n                if (index === currentQuestion.correctAnswer) {\r\n                  // Correct answer - always green when revealed\r\n                  optionStyle = {\r\n                    ...optionStyle,\r\n                    backgroundColor: '#4caf50',\r\n                    border: '2px solid #66bb6a',\r\n                    boxShadow: '0 4px 15px rgba(76, 175, 80, 0.4)'\r\n                  };\r\n                } else if (index === currentState.selectedAnswer) {\r\n                  // User's wrong selection - red\r\n                  optionStyle = {\r\n                    ...optionStyle,\r\n                    backgroundColor: '#f44336',\r\n                    border: '2px solid #ef5350',\r\n                    boxShadow: '0 4px 15px rgba(244, 67, 54, 0.4)'\r\n                  };\r\n                } else {\r\n                  // Other options - dimmed\r\n                  optionStyle = {\r\n                    ...optionStyle,\r\n                    backgroundColor: 'rgba(255,255,255,0.05)',\r\n                    border: '2px solid rgba(255,255,255,0.1)',\r\n                    opacity: 0.6\r\n                  };\r\n                }\r\n              }\r\n            }\r\n\r\n            return (\r\n              <div\r\n                key={index}\r\n                style={optionStyle}\r\n                onClick={() => handleAnswerSelect(index)}\r\n                onMouseEnter={(e) => {\r\n                  if (!currentState.isAnswered) {\r\n                    e.currentTarget.style.backgroundColor = 'rgba(255,255,255,0.2)';\r\n                    e.currentTarget.style.transform = 'translateY(-2px)';\r\n                  }\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                  if (!currentState.isAnswered) {\r\n                    e.currentTarget.style.backgroundColor = 'rgba(255,255,255,0.1)';\r\n                    e.currentTarget.style.transform = 'translateY(0)';\r\n                  }\r\n                }}\r\n              >\r\n                <span style={{\r\n                  minWidth: '30px',\r\n                  height: '30px',\r\n                  borderRadius: '50%',\r\n                  backgroundColor: currentState.isAnswered && !currentState.showHint && index === currentQuestion.correctAnswer ? '#fff' : \r\n                                   currentState.isAnswered && index === currentState.selectedAnswer ? '#fff' :\r\n                                   'rgba(255,255,255,0.2)',\r\n                  color: currentState.isAnswered && ((!currentState.showHint && index === currentQuestion.correctAnswer) || index === currentState.selectedAnswer) ? '#333' : '#fff',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  fontWeight: 'bold',\r\n                  marginRight: '15px'\r\n                }}>\r\n                  {String.fromCharCode(65 + index)}\r\n                </span>\r\n                <span>{option}</span>\r\n                {currentState.isAnswered && !currentState.showHint && index === currentQuestion.correctAnswer && (\r\n                  <span style={{ marginLeft: 'auto', fontSize: '20px' }}>✅</span>\r\n                )}\r\n                {currentState.isAnswered && index === currentState.selectedAnswer && index !== currentQuestion.correctAnswer && (\r\n                  <span style={{ marginLeft: 'auto', fontSize: '20px' }}>❌</span>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Feedback Section */}\r\n      {currentState.showFeedback && (\r\n        <div style={{\r\n          backgroundColor: currentState.isCorrect ? 'rgba(76, 175, 80, 0.2)' : 'rgba(244, 67, 54, 0.2)',\r\n          padding: '20px',\r\n          borderRadius: '12px',\r\n          marginBottom: '20px',\r\n          border: `2px solid ${currentState.isCorrect ? '#4caf50' : '#f44336'}`\r\n        }}>\r\n          {currentState.isCorrect ? (\r\n            <div>\r\n              <h4 style={{ color: '#4caf50', margin: '0 0 10px 0', fontSize: '18px' }}>\r\n                🎉 {currentState.isFirstAttempt ? 'Perfect! +1 Point!' : 'Correct! +0.5 Point!'}\r\n              </h4>\r\n              <p style={{ margin: '0', lineHeight: '1.4' }}>\r\n                <strong>Explanation:</strong> {currentQuestion.explanation}\r\n              </p>\r\n            </div>\r\n          ) : currentState.showHint ? (\r\n            <div>\r\n              <h4 style={{ color: '#ff9800', margin: '0 0 10px 0', fontSize: '18px' }}>\r\n                💡 Need a Hint?\r\n              </h4>\r\n              <p style={{ margin: '0 0 15px 0', lineHeight: '1.4' }}>\r\n                {currentQuestion.hint || getIndirectHint()}\r\n              </p>\r\n              <button\r\n                onClick={retryAfterHint}\r\n                style={{\r\n                  backgroundColor: '#ff9800',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  padding: '10px 20px',\r\n                  borderRadius: '8px',\r\n                  fontSize: '14px',\r\n                  fontWeight: 'bold',\r\n                  cursor: 'pointer'\r\n                }}\r\n              >\r\n                Try Again\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h4 style={{ color: '#f44336', margin: '0 0 10px 0', fontSize: '18px' }}>\r\n                ❌ Incorrect Answer - 0 Points\r\n              </h4>\r\n              <p style={{ margin: '0', lineHeight: '1.4' }}>\r\n                <strong>Explanation:</strong> {currentQuestion.explanation}\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Navigation - Always Available */}\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <button\r\n          onClick={handlePrevious}\r\n          disabled={currentQuestionIndex === 0}\r\n          style={{\r\n            backgroundColor: currentQuestionIndex === 0 ? 'rgba(255,255,255,0.2)' : '#6c757d',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '12px 25px',\r\n            borderRadius: '20px',\r\n            fontSize: '14px',\r\n            fontWeight: 'bold',\r\n            cursor: currentQuestionIndex === 0 ? 'not-allowed' : 'pointer',\r\n            opacity: currentQuestionIndex === 0 ? 0.5 : 1\r\n          }}\r\n        >\r\n          ← Previous\r\n        </button>\r\n\r\n        <button\r\n          onClick={handleNext}\r\n          disabled={!currentState.isAnswered || currentState.showHint}\r\n          style={{\r\n            backgroundColor: (!currentState.isAnswered || currentState.showHint) ? 'rgba(255,255,255,0.2)' : '#4facfe',\r\n            background: (!currentState.isAnswered || currentState.showHint) ? 'rgba(255,255,255,0.2)' : 'linear-gradient(45deg, #4facfe, #00f2fe)',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '15px 40px',\r\n            borderRadius: '25px',\r\n            fontSize: '16px',\r\n            fontWeight: 'bold',\r\n            cursor: (!currentState.isAnswered || currentState.showHint) ? 'not-allowed' : 'pointer',\r\n            boxShadow: (!currentState.isAnswered || currentState.showHint) ? 'none' : '0 4px 15px rgba(79, 172, 254, 0.4)',\r\n            transition: 'transform 0.2s ease',\r\n            opacity: (!currentState.isAnswered || currentState.showHint) ? 0.5 : 1\r\n          }}\r\n          onMouseEnter={(e) => {\r\n            if (currentState.isAnswered && !currentState.showHint) {\r\n              e.currentTarget.style.transform = 'translateY(-2px)';\r\n            }\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            if (currentState.isAnswered && !currentState.showHint) {\r\n              e.currentTarget.style.transform = 'translateY(0)';\r\n            }\r\n          }}\r\n        >\r\n          {currentQuestionIndex === questions.length - 1 ? 'Finish Quiz' : 'Next Question'} →\r\n        </button>\r\n      </div>\r\n\r\n      <style>\r\n        {`\r\n          @keyframes starFall {\r\n            0% {\r\n              transform: translateY(-50px) scale(0);\r\n              opacity: 1;\r\n            }\r\n            50% {\r\n              transform: translateY(100px) scale(1);\r\n              opacity: 1;\r\n            }\r\n            100% {\r\n              transform: translateY(200px) scale(0);\r\n              opacity: 0;\r\n            }\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}; ","import React, { useState } from 'react';\r\nimport { TrueFalseQuestion, Theme } from '../../types/quiz';\r\n\r\ninterface TrueFalseQuizProps {\r\n  questions: TrueFalseQuestion[];\r\n  theme: Theme;\r\n  onComplete: (score: number, totalQuestions: number) => void;\r\n}\r\n\r\ninterface QuestionState {\r\n  answered: boolean;\r\n  selectedAnswer: boolean | null;\r\n  usedHint: boolean;\r\n  score: number; // 1, 0.5, or 0\r\n}\r\n\r\nexport const TrueFalseQuiz: React.FC<TrueFalseQuizProps> = ({ questions, theme, onComplete }) => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [questionStates, setQuestionStates] = useState<QuestionState[]>(\r\n    questions.map(() => ({\r\n      answered: false,\r\n      selectedAnswer: null,\r\n      usedHint: false,\r\n      score: 0\r\n    }))\r\n  );\r\n  const [showHint, setShowHint] = useState(false);\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n  const [stars, setStars] = useState<number[]>([]);\r\n  const [showStarAnimation, setShowStarAnimation] = useState(false);\r\n  const [sadEmojis, setSadEmojis] = useState<number[]>([]);\r\n  const [showSadAnimation, setShowSadAnimation] = useState(false);\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n  const currentState = questionStates[currentQuestionIndex];\r\n  const totalScore = questionStates.reduce((sum, state) => sum + state.score, 0);\r\n\r\n  const triggerStarAnimation = () => {\r\n    setShowStarAnimation(true);\r\n    const newStars = Array.from({ length: 5 }, (_, i) => Math.random() * 100);\r\n    setStars(newStars);\r\n    setTimeout(() => setShowStarAnimation(false), 2000);\r\n  };\r\n\r\n  const triggerSadAnimation = () => {\r\n    setShowSadAnimation(true);\r\n    const newSadEmojis = Array.from({ length: 4 }, (_, i) => Math.random() * 100);\r\n    setSadEmojis(newSadEmojis);\r\n    setTimeout(() => setShowSadAnimation(false), 2000);\r\n  };\r\n\r\n  const handleAnswer = (answer: boolean) => {\r\n    if (currentState.answered) return;\r\n\r\n    const isCorrect = answer === currentQuestion.correctAnswer;\r\n    let score = 0;\r\n\r\n    if (isCorrect) {\r\n      score = currentState.usedHint ? 0.5 : 1;\r\n    }\r\n\r\n    const newStates = [...questionStates];\r\n    newStates[currentQuestionIndex] = {\r\n      answered: true,\r\n      selectedAnswer: answer,\r\n      usedHint: currentState.usedHint,\r\n      score: score\r\n    };\r\n\r\n    setQuestionStates(newStates);\r\n    setShowHint(false);\r\n\r\n    // Show animation\r\n    if (isCorrect) {\r\n      triggerStarAnimation();\r\n    } else {\r\n      triggerSadAnimation();\r\n    }\r\n  };\r\n\r\n  const handleHint = () => {\r\n    if (currentState.answered) return;\r\n    \r\n    setShowHint(true);\r\n    const newStates = [...questionStates];\r\n    newStates[currentQuestionIndex] = {\r\n      ...newStates[currentQuestionIndex],\r\n      usedHint: true\r\n    };\r\n    setQuestionStates(newStates);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setShowHint(false);\r\n    } else {\r\n      // Check if all questions are answered\r\n      const allAnswered = questionStates.every(state => state.answered);\r\n      if (allAnswered) {\r\n        setIsCompleted(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n      setShowHint(false);\r\n    }\r\n  };\r\n\r\n  const handleFinish = () => {\r\n    setIsCompleted(true);\r\n    onComplete(totalScore, questions.length);\r\n  };\r\n\r\n  if (isCompleted) {\r\n    const percentage = Math.round((totalScore / questions.length) * 100);\r\n    \r\n    return (\r\n      <div style={{\r\n        background: `linear-gradient(135deg, ${theme.primaryColor} 0%, ${theme.secondaryColor} 100%)`,\r\n        minHeight: '600px',\r\n        borderRadius: '20px',\r\n        padding: '40px',\r\n        color: theme.textColor,\r\n        fontFamily: theme.fontFamily,\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}>\r\n        <div style={{ fontSize: '60px', marginBottom: '20px' }}>🎯</div>\r\n        <h2 style={{ fontSize: '36px', margin: '0 0 20px 0' }}>True or False Completed!</h2>\r\n        \r\n        <div style={{\r\n          backgroundColor: 'rgba(255,255,255,0.2)',\r\n          borderRadius: '15px',\r\n          padding: '30px',\r\n          marginBottom: '30px',\r\n          backdropFilter: 'blur(10px)'\r\n        }}>\r\n          <div style={{ fontSize: '24px', fontWeight: 'bold', marginBottom: '15px' }}>\r\n            Final Score: {totalScore} / {questions.length}\r\n          </div>\r\n          <div style={{ fontSize: '20px', marginBottom: '15px' }}>\r\n            Percentage: {percentage}%\r\n          </div>\r\n          <div style={{ fontSize: '22px', fontWeight: 'bold' }}>\r\n            {percentage >= 80 ? '⭐⭐⭐ Outstanding!' : \r\n             percentage >= 60 ? '⭐⭐ Good Job!' : \r\n             percentage >= 40 ? '⭐ Keep Learning!' : 'Try Again!'}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Individual Question Scores */}\r\n        <div style={{\r\n          backgroundColor: 'rgba(255,255,255,0.1)',\r\n          borderRadius: '15px',\r\n          padding: '20px',\r\n          marginBottom: '30px',\r\n          backdropFilter: 'blur(10px)',\r\n          maxWidth: '500px',\r\n          width: '100%'\r\n        }}>\r\n          <h3 style={{ marginBottom: '15px', color: '#ffed4e' }}>Question Breakdown:</h3>\r\n          {questions.map((_, index) => {\r\n            const state = questionStates[index];\r\n            return (\r\n              <div key={index} style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                padding: '8px 0',\r\n                borderBottom: index < questions.length - 1 ? '1px solid rgba(255,255,255,0.2)' : 'none'\r\n              }}>\r\n                <span>Question {index + 1}</span>\r\n                <span style={{\r\n                  fontWeight: 'bold',\r\n                  color: state.score === 1 ? '#4caf50' : state.score === 0.5 ? '#ff9800' : '#f44336'\r\n                }}>\r\n                  {state.score === 1 && '⭐ 1.0'}\r\n                  {state.score === 0.5 && '⭐ 0.5'}\r\n                  {state.score === 0 && '❌ 0.0'}\r\n                </span>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div style={{ display: 'flex', gap: '20px', justifyContent: 'center' }}>\r\n          <button\r\n            onClick={() => {\r\n              setIsCompleted(false);\r\n              setCurrentQuestionIndex(0);\r\n              setQuestionStates(questions.map(() => ({\r\n                answered: false,\r\n                selectedAnswer: null,\r\n                usedHint: false,\r\n                score: 0\r\n              })));\r\n              setShowHint(false);\r\n            }}\r\n            style={{\r\n              backgroundColor: '#4caf50',\r\n              background: 'linear-gradient(45deg, #4caf50, #66bb6a)',\r\n              color: 'white',\r\n              border: 'none',\r\n              padding: '15px 30px',\r\n              borderRadius: '25px',\r\n              fontSize: '18px',\r\n              fontWeight: 'bold',\r\n              cursor: 'pointer',\r\n              boxShadow: '0 4px 15px rgba(76, 175, 80, 0.4)',\r\n              transition: 'transform 0.2s ease'\r\n            }}\r\n            onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n            onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n          >\r\n            🔄 Try Again\r\n          </button>\r\n          \r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            style={{\r\n              backgroundColor: '#2196f3',\r\n              background: 'linear-gradient(45deg, #2196f3, #21cbf3)',\r\n              color: 'white',\r\n              border: 'none',\r\n              padding: '15px 30px',\r\n              borderRadius: '25px',\r\n              fontSize: '18px',\r\n              fontWeight: 'bold',\r\n              cursor: 'pointer',\r\n              boxShadow: '0 4px 15px rgba(33, 150, 243, 0.4)',\r\n              transition: 'transform 0.2s ease'\r\n            }}\r\n            onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n            onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n          >\r\n            🏠 Back to Home\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      background: `linear-gradient(135deg, ${theme.primaryColor} 0%, ${theme.secondaryColor} 100%)`,\r\n      minHeight: '600px',\r\n      borderRadius: '20px',\r\n      padding: '30px',\r\n      color: theme.textColor,\r\n      fontFamily: theme.fontFamily,\r\n      position: 'relative',\r\n      overflow: 'hidden'\r\n    }}>\r\n      {/* Header */}\r\n      <div style={{ textAlign: 'center', marginBottom: '30px' }}>\r\n        <h2 style={{ \r\n          margin: 0, \r\n          fontSize: '28px', \r\n          background: 'linear-gradient(45deg, #ffd700, #ffed4e)',\r\n          WebkitBackgroundClip: 'text',\r\n          WebkitTextFillColor: 'transparent',\r\n          textShadow: '0 0 20px rgba(255, 215, 0, 0.3)'\r\n        }}>\r\n          True or False Quiz\r\n        </h2>\r\n        <div style={{ marginTop: '15px', display: 'flex', justifyContent: 'center', gap: '30px' }}>\r\n          <div style={{ fontSize: '16px' }}>\r\n            Question: {currentQuestionIndex + 1} / {questions.length}\r\n          </div>\r\n          <div style={{ fontSize: '16px' }}>\r\n            Score: {totalScore.toFixed(1)} / {questions.length}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div style={{\r\n        backgroundColor: 'rgba(255,255,255,0.2)',\r\n        borderRadius: '10px',\r\n        height: '8px',\r\n        marginBottom: '30px',\r\n        overflow: 'hidden'\r\n      }}>\r\n        <div style={{\r\n          background: 'linear-gradient(45deg, #ffd700, #ffed4e)',\r\n          height: '100%',\r\n          width: `${((currentQuestionIndex + 1) / questions.length) * 100}%`,\r\n          transition: 'width 0.3s ease'\r\n        }} />\r\n      </div>\r\n\r\n      {/* Star Animation */}\r\n      {showStarAnimation && (\r\n        <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', pointerEvents: 'none', zIndex: 10 }}>\r\n          {stars.map((left, i) => (\r\n            <div\r\n              key={i}\r\n              style={{\r\n                position: 'absolute',\r\n                left: `${left}%`,\r\n                top: '20%',\r\n                fontSize: '30px',\r\n                animation: 'starFall 2s ease-out forwards',\r\n                color: '#ffd700'\r\n              }}\r\n            >\r\n              ⭐\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Sad Animation */}\r\n      {showSadAnimation && (\r\n        <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', pointerEvents: 'none', zIndex: 10 }}>\r\n          {sadEmojis.map((left, i) => (\r\n            <div\r\n              key={i}\r\n              style={{\r\n                position: 'absolute',\r\n                left: `${left}%`,\r\n                top: '20%',\r\n                fontSize: '30px',\r\n                animation: 'sadShake 2s ease-out forwards',\r\n                color: '#ff6b6b'\r\n              }}\r\n            >\r\n              😢\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Question Container */}\r\n      <div style={{\r\n        backgroundColor: 'rgba(255,255,255,0.1)',\r\n        borderRadius: '15px',\r\n        padding: '30px',\r\n        marginBottom: '30px',\r\n        backdropFilter: 'blur(10px)'\r\n      }}>\r\n        <h3 style={{\r\n          fontSize: '22px',\r\n          marginBottom: '25px',\r\n          textAlign: 'center',\r\n          lineHeight: '1.4',\r\n          color: '#ffffff',\r\n          fontWeight: 'bold',\r\n          textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\r\n        }}>\r\n          {currentQuestion.statement}\r\n        </h3>\r\n\r\n        {/* Hint Section */}\r\n        {showHint && currentQuestion.hint && (\r\n          <div style={{\r\n            backgroundColor: 'rgba(255, 193, 7, 0.2)',\r\n            border: '2px solid #ffc107',\r\n            borderRadius: '10px',\r\n            padding: '15px',\r\n            marginBottom: '20px',\r\n            textAlign: 'center'\r\n          }}>\r\n            <div style={{ \r\n              fontSize: '16px', \r\n              fontWeight: 'bold', \r\n              color: '#ffc107',\r\n              marginBottom: '8px'\r\n            }}>\r\n              💡 Hint:\r\n            </div>\r\n            <div style={{ fontSize: '16px' }}>\r\n              {currentQuestion.hint}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Answer Buttons */}\r\n        <div style={{\r\n          display: 'flex',\r\n          gap: '20px',\r\n          justifyContent: 'center',\r\n          marginBottom: '25px'\r\n        }}>\r\n          <button\r\n            onClick={() => handleAnswer(true)}\r\n            disabled={currentState.answered}\r\n            style={{\r\n              background: currentState.answered && currentState.selectedAnswer === true\r\n                ? (currentQuestion.correctAnswer === true ? 'linear-gradient(45deg, #4caf50, #66bb6a)' : 'linear-gradient(45deg, #f44336, #ef5350)')\r\n                : 'linear-gradient(45deg, #2196f3, #42a5f5)',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '15px',\r\n              padding: '20px 40px',\r\n              fontSize: '18px',\r\n              fontWeight: 'bold',\r\n              cursor: currentState.answered ? 'default' : 'pointer',\r\n              boxShadow: '0 4px 15px rgba(33, 150, 243, 0.4)',\r\n              transition: 'all 0.3s ease',\r\n              opacity: currentState.answered ? 0.8 : 1\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              if (!currentState.answered) {\r\n                e.currentTarget.style.transform = 'translateY(-2px)';\r\n              }\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              if (!currentState.answered) {\r\n                e.currentTarget.style.transform = 'translateY(0)';\r\n              }\r\n            }}\r\n          >\r\n            ✓ TRUE\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => handleAnswer(false)}\r\n            disabled={currentState.answered}\r\n            style={{\r\n              background: currentState.answered && currentState.selectedAnswer === false\r\n                ? (currentQuestion.correctAnswer === false ? 'linear-gradient(45deg, #4caf50, #66bb6a)' : 'linear-gradient(45deg, #f44336, #ef5350)')\r\n                : 'linear-gradient(45deg, #f44336, #ef5350)',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '15px',\r\n              padding: '20px 40px',\r\n              fontSize: '18px',\r\n              fontWeight: 'bold',\r\n              cursor: currentState.answered ? 'default' : 'pointer',\r\n              boxShadow: '0 4px 15px rgba(244, 67, 54, 0.4)',\r\n              transition: 'all 0.3s ease',\r\n              opacity: currentState.answered ? 0.8 : 1\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              if (!currentState.answered) {\r\n                e.currentTarget.style.transform = 'translateY(-2px)';\r\n              }\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              if (!currentState.answered) {\r\n                e.currentTarget.style.transform = 'translateY(0)';\r\n              }\r\n            }}\r\n          >\r\n            ✗ FALSE\r\n          </button>\r\n        </div>\r\n\r\n        {/* Explanation */}\r\n        {currentState.answered && currentQuestion.explanation && (\r\n          <div style={{\r\n            backgroundColor: currentState.selectedAnswer === currentQuestion.correctAnswer \r\n              ? 'rgba(76, 175, 80, 0.2)' \r\n              : 'rgba(244, 67, 54, 0.2)',\r\n            border: `2px solid ${currentState.selectedAnswer === currentQuestion.correctAnswer ? '#4caf50' : '#f44336'}`,\r\n            borderRadius: '10px',\r\n            padding: '15px',\r\n            textAlign: 'center'\r\n          }}>\r\n            <div style={{ \r\n              fontSize: '16px', \r\n              fontWeight: 'bold', \r\n              marginBottom: '8px',\r\n              color: currentState.selectedAnswer === currentQuestion.correctAnswer ? '#4caf50' : '#f44336'\r\n            }}>\r\n              {currentState.selectedAnswer === currentQuestion.correctAnswer ? '✅ Correct!' : '❌ Incorrect!'}\r\n            </div>\r\n            <div style={{ fontSize: '16px' }}>\r\n              {currentQuestion.explanation}\r\n            </div>\r\n            {currentState.usedHint && (\r\n              <div style={{ \r\n                fontSize: '14px', \r\n                marginTop: '8px', \r\n                fontStyle: 'italic',\r\n                color: '#ffc107'\r\n              }}>\r\n                💡 Hint was used - Half points awarded\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Navigation */}\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        gap: '20px'\r\n      }}>\r\n        <button\r\n          onClick={handlePrevious}\r\n          disabled={currentQuestionIndex === 0}\r\n          style={{\r\n            background: currentQuestionIndex === 0 \r\n              ? 'linear-gradient(45deg, #666, #888)' \r\n              : 'linear-gradient(45deg, #9e9e9e, #bdbdbd)',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '20px',\r\n            padding: '12px 25px',\r\n            fontSize: '16px',\r\n            fontWeight: 'bold',\r\n            cursor: currentQuestionIndex === 0 ? 'not-allowed' : 'pointer',\r\n            opacity: currentQuestionIndex === 0 ? 0.5 : 1,\r\n            transition: 'transform 0.2s ease'\r\n          }}\r\n          onMouseEnter={(e) => {\r\n            if (currentQuestionIndex !== 0) {\r\n              e.currentTarget.style.transform = 'translateY(-2px)';\r\n            }\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            if (currentQuestionIndex !== 0) {\r\n              e.currentTarget.style.transform = 'translateY(0)';\r\n            }\r\n          }}\r\n        >\r\n          ⬅ Previous\r\n        </button>\r\n\r\n        <button\r\n          onClick={handleHint}\r\n          disabled={currentState.answered || currentState.usedHint}\r\n          style={{\r\n            background: (currentState.answered || currentState.usedHint)\r\n              ? 'linear-gradient(45deg, #666, #888)'\r\n              : 'linear-gradient(45deg, #ff9800, #ffb74d)',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '20px',\r\n            padding: '12px 25px',\r\n            fontSize: '16px',\r\n            fontWeight: 'bold',\r\n            cursor: (currentState.answered || currentState.usedHint) ? 'not-allowed' : 'pointer',\r\n            opacity: (currentState.answered || currentState.usedHint) ? 0.5 : 1,\r\n            transition: 'transform 0.2s ease'\r\n          }}\r\n          onMouseEnter={(e) => {\r\n            if (!currentState.answered && !currentState.usedHint) {\r\n              e.currentTarget.style.transform = 'translateY(-2px)';\r\n            }\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            if (!currentState.answered && !currentState.usedHint) {\r\n              e.currentTarget.style.transform = 'translateY(0)';\r\n            }\r\n          }}\r\n        >\r\n          💡 Hint\r\n        </button>\r\n\r\n        {currentQuestionIndex === questions.length - 1 ? (\r\n          <button\r\n            onClick={handleFinish}\r\n            disabled={!questionStates.every(state => state.answered)}\r\n            style={{\r\n              background: !questionStates.every(state => state.answered)\r\n                ? 'linear-gradient(45deg, #666, #888)'\r\n                : 'linear-gradient(45deg, #4caf50, #66bb6a)',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '20px',\r\n              padding: '12px 25px',\r\n              fontSize: '16px',\r\n              fontWeight: 'bold',\r\n              cursor: !questionStates.every(state => state.answered) ? 'not-allowed' : 'pointer',\r\n              opacity: !questionStates.every(state => state.answered) ? 0.5 : 1,\r\n              transition: 'transform 0.2s ease'\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              if (questionStates.every(state => state.answered)) {\r\n                e.currentTarget.style.transform = 'translateY(-2px)';\r\n              }\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              if (questionStates.every(state => state.answered)) {\r\n                e.currentTarget.style.transform = 'translateY(0)';\r\n              }\r\n            }}\r\n          >\r\n            ✅ Finish\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={handleNext}\r\n            style={{\r\n              background: 'linear-gradient(45deg, #2196f3, #42a5f5)',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '20px',\r\n              padding: '12px 25px',\r\n              fontSize: '16px',\r\n              fontWeight: 'bold',\r\n              cursor: 'pointer',\r\n              transition: 'transform 0.2s ease'\r\n            }}\r\n            onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n            onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n          >\r\n            Next ➡\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Animation Styles */}\r\n      <style>\r\n        {`\r\n          @keyframes starBurst {\r\n            0% { transform: scale(0) rotate(0deg); opacity: 0; }\r\n            50% { transform: scale(1.5) rotate(180deg); opacity: 1; }\r\n            100% { transform: scale(1) rotate(360deg); opacity: 0; }\r\n          }\r\n          \r\n          @keyframes sadShake {\r\n            0%, 100% { transform: translateX(0) scale(0); opacity: 0; }\r\n            10% { transform: translateX(-10px) scale(1); opacity: 1; }\r\n            20% { transform: translateX(10px) scale(1); opacity: 1; }\r\n            30% { transform: translateX(-10px) scale(1); opacity: 1; }\r\n            40% { transform: translateX(10px) scale(1); opacity: 1; }\r\n            50% { transform: translateX(0) scale(1); opacity: 1; }\r\n            75% { transform: translateX(0) scale(1); opacity: 0.5; }\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}; ","import React, { useState } from 'react';\r\nimport { FillBlanksQuestion, Theme } from '../../types/quiz';\r\n\r\ninterface FillBlanksQuizProps {\r\n  questions: FillBlanksQuestion[];\r\n  theme: Theme;\r\n  onComplete: (score: number, totalQuestions: number) => void;\r\n}\r\n\r\ninterface QuestionState {\r\n  answered: boolean;\r\n  userAnswer: string;\r\n  usedHint: boolean;\r\n  score: number; // 1, 0.5, or 0\r\n  isCorrect: boolean;\r\n}\r\n\r\nexport const FillBlanksQuiz: React.FC<FillBlanksQuizProps> = ({ questions, theme, onComplete }) => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [questionStates, setQuestionStates] = useState<QuestionState[]>(\r\n    questions.map(() => ({\r\n      answered: false,\r\n      userAnswer: '',\r\n      usedHint: false,\r\n      score: 0,\r\n      isCorrect: false\r\n    }))\r\n  );\r\n  const [currentInput, setCurrentInput] = useState('');\r\n  const [showHint, setShowHint] = useState(false);\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n  const [stars, setStars] = useState<number[]>([]);\r\n  const [showStarAnimation, setShowStarAnimation] = useState(false);\r\n  const [sadEmojis, setSadEmojis] = useState<number[]>([]);\r\n  const [showSadAnimation, setShowSadAnimation] = useState(false);\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n  const currentState = questionStates[currentQuestionIndex];\r\n  const totalScore = questionStates.reduce((sum, state) => sum + state.score, 0);\r\n\r\n  // Advanced validation function\r\n  const validateAnswer = (userInput: string, correctAnswers: string[]): boolean => {\r\n    const normalizedInput = userInput.toLowerCase().trim();\r\n    \r\n    return correctAnswers.some(correctAnswer => {\r\n      const normalizedCorrect = correctAnswer.toLowerCase().trim();\r\n      \r\n      // Exact match (case-insensitive)\r\n      if (normalizedInput === normalizedCorrect) return true;\r\n      \r\n      // Handle number vs word variations\r\n      const numberWordMap: { [key: string]: string[] } = {\r\n        '1': ['one', 'first'],\r\n        '2': ['two', 'second'],\r\n        '3': ['three', 'third'],\r\n        '4': ['four', 'fourth'],\r\n        '5': ['five', 'fifth'],\r\n        '6': ['six', 'sixth'],\r\n        '7': ['seven', 'seventh'],\r\n        '8': ['eight', 'eighth'],\r\n        '9': ['nine', 'ninth'],\r\n        '10': ['ten', 'tenth'],\r\n        '1945': ['nineteen forty-five', 'nineteen forty five'],\r\n        '100': ['hundred', 'one hundred'],\r\n        '1000': ['thousand', 'one thousand']\r\n      };\r\n      \r\n      // Check if input is a number and correct answer has word equivalent\r\n      for (const [num, words] of Object.entries(numberWordMap)) {\r\n        if (normalizedInput === num && words.includes(normalizedCorrect)) return true;\r\n        if (words.includes(normalizedInput) && normalizedCorrect === num) return true;\r\n        if (words.includes(normalizedInput) && words.includes(normalizedCorrect)) return true;\r\n      }\r\n      \r\n      // Handle partial matches for long answers (80% similarity)\r\n      if (normalizedCorrect.length > 5) {\r\n        const similarity = calculateSimilarity(normalizedInput, normalizedCorrect);\r\n        if (similarity >= 0.8) return true;\r\n      }\r\n      \r\n      return false;\r\n    });\r\n  };\r\n\r\n  const calculateSimilarity = (str1: string, str2: string): number => {\r\n    const longer = str1.length > str2.length ? str1 : str2;\r\n    const shorter = str1.length > str2.length ? str2 : str1;\r\n    \r\n    if (longer.length === 0) return 1.0;\r\n    \r\n    const distance = levenshteinDistance(longer, shorter);\r\n    return (longer.length - distance) / longer.length;\r\n  };\r\n\r\n  const levenshteinDistance = (str1: string, str2: string): number => {\r\n    const matrix = Array(str2.length + 1).fill(null).map(() => Array(str1.length + 1).fill(null));\r\n    \r\n    for (let i = 0; i <= str1.length; i++) matrix[0][i] = i;\r\n    for (let j = 0; j <= str2.length; j++) matrix[j][0] = j;\r\n    \r\n    for (let j = 1; j <= str2.length; j++) {\r\n      for (let i = 1; i <= str1.length; i++) {\r\n        const indicator = str1[i - 1] === str2[j - 1] ? 0 : 1;\r\n        matrix[j][i] = Math.min(\r\n          matrix[j][i - 1] + 1,\r\n          matrix[j - 1][i] + 1,\r\n          matrix[j - 1][i - 1] + indicator\r\n        );\r\n      }\r\n    }\r\n    \r\n    return matrix[str2.length][str1.length];\r\n  };\r\n\r\n  const triggerStarAnimation = () => {\r\n    setShowStarAnimation(true);\r\n    const newStars = Array.from({ length: 5 }, (_, i) => Math.random() * 100);\r\n    setStars(newStars);\r\n    setTimeout(() => setShowStarAnimation(false), 2000);\r\n  };\r\n\r\n  const triggerSadAnimation = () => {\r\n    setShowSadAnimation(true);\r\n    const newSadEmojis = Array.from({ length: 4 }, (_, i) => Math.random() * 100);\r\n    setSadEmojis(newSadEmojis);\r\n    setTimeout(() => setShowSadAnimation(false), 2000);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (currentState.answered || !currentInput.trim()) return;\r\n\r\n    const isCorrect = validateAnswer(currentInput, currentQuestion.correctAnswers);\r\n    let score = 0;\r\n\r\n    if (isCorrect) {\r\n      score = currentState.usedHint ? 0.5 : 1;\r\n    }\r\n\r\n    const newStates = [...questionStates];\r\n    newStates[currentQuestionIndex] = {\r\n      answered: true,\r\n      userAnswer: currentInput,\r\n      usedHint: currentState.usedHint,\r\n      score: score,\r\n      isCorrect: isCorrect\r\n    };\r\n\r\n    setQuestionStates(newStates);\r\n    setShowHint(false);\r\n\r\n    // Show animation\r\n    if (isCorrect) {\r\n      triggerStarAnimation();\r\n    } else {\r\n      triggerSadAnimation();\r\n    }\r\n  };\r\n\r\n  const handleHint = () => {\r\n    if (currentState.answered) return;\r\n    \r\n    setShowHint(true);\r\n    const newStates = [...questionStates];\r\n    newStates[currentQuestionIndex] = {\r\n      ...newStates[currentQuestionIndex],\r\n      usedHint: true\r\n    };\r\n    setQuestionStates(newStates);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setCurrentInput(questionStates[currentQuestionIndex + 1].userAnswer);\r\n      setShowHint(false);\r\n    } else {\r\n      // Check if all questions are answered\r\n      const allAnswered = questionStates.every(state => state.answered);\r\n      if (allAnswered) {\r\n        setIsCompleted(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n      setCurrentInput(questionStates[currentQuestionIndex - 1].userAnswer);\r\n      setShowHint(false);\r\n    }\r\n  };\r\n\r\n  const handleFinish = () => {\r\n    setIsCompleted(true);\r\n    onComplete(totalScore, questions.length);\r\n  };\r\n\r\n  // Update input when navigating to answered questions\r\n  React.useEffect(() => {\r\n    setCurrentInput(currentState.userAnswer);\r\n  }, [currentQuestionIndex, currentState.userAnswer]);\r\n\r\n  if (isCompleted) {\r\n    const percentage = Math.round((totalScore / questions.length) * 100);\r\n    \r\n    return (\r\n      <div style={{\r\n        background: `linear-gradient(135deg, ${theme.primaryColor} 0%, ${theme.secondaryColor} 100%)`,\r\n        minHeight: '600px',\r\n        borderRadius: '20px',\r\n        padding: '40px',\r\n        color: theme.textColor,\r\n        fontFamily: theme.fontFamily,\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}>\r\n        <div style={{ fontSize: '60px', marginBottom: '20px' }}>🎯</div>\r\n        <h2 style={{ fontSize: '36px', margin: '0 0 20px 0' }}>Fill in the Blanks Completed!</h2>\r\n        \r\n        <div style={{\r\n          backgroundColor: 'rgba(255,255,255,0.2)',\r\n          borderRadius: '15px',\r\n          padding: '30px',\r\n          marginBottom: '30px',\r\n          backdropFilter: 'blur(10px)'\r\n        }}>\r\n          <div style={{ fontSize: '24px', fontWeight: 'bold', marginBottom: '15px' }}>\r\n            Final Score: {totalScore.toFixed(1)} / {questions.length}\r\n          </div>\r\n          <div style={{ fontSize: '20px', marginBottom: '15px' }}>\r\n            Percentage: {percentage}%\r\n          </div>\r\n          <div style={{ fontSize: '22px', fontWeight: 'bold' }}>\r\n            {percentage >= 80 ? '⭐⭐⭐ Outstanding!' : \r\n             percentage >= 60 ? '⭐⭐ Good Job!' : \r\n             percentage >= 40 ? '⭐ Keep Learning!' : 'Try Again!'}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Individual Question Scores */}\r\n        <div style={{\r\n          backgroundColor: 'rgba(255,255,255,0.1)',\r\n          borderRadius: '15px',\r\n          padding: '20px',\r\n          marginBottom: '30px',\r\n          backdropFilter: 'blur(10px)',\r\n          maxWidth: '600px',\r\n          width: '100%'\r\n        }}>\r\n          <h3 style={{ marginBottom: '15px', color: '#ffed4e' }}>Question Breakdown:</h3>\r\n          {questions.map((question, index) => {\r\n            const state = questionStates[index];\r\n            return (\r\n              <div key={index} style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                padding: '12px 0',\r\n                borderBottom: index < questions.length - 1 ? '1px solid rgba(255,255,255,0.2)' : 'none'\r\n              }}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                  <span>Question {index + 1}</span>\r\n                  <span style={{\r\n                    fontWeight: 'bold',\r\n                    color: state.score === 1 ? '#4caf50' : state.score === 0.5 ? '#ff9800' : '#f44336'\r\n                  }}>\r\n                    {state.score === 1 && '⭐ 1.0'}\r\n                    {state.score === 0.5 && '⭐ 0.5'}\r\n                    {state.score === 0 && '❌ 0.0'}\r\n                  </span>\r\n                </div>\r\n                <div style={{ fontSize: '14px', opacity: 0.8, marginTop: '4px' }}>\r\n                  Your answer: \"{state.userAnswer}\"\r\n                  {!state.isCorrect && (\r\n                    <span style={{ color: '#4caf50', marginLeft: '10px' }}>\r\n                      Correct: {question.correctAnswers[0]}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div style={{ display: 'flex', gap: '20px', justifyContent: 'center' }}>\r\n          <button\r\n            onClick={() => {\r\n              setIsCompleted(false);\r\n              setCurrentQuestionIndex(0);\r\n              setQuestionStates(questions.map(() => ({\r\n                answered: false,\r\n                userAnswer: '',\r\n                usedHint: false,\r\n                score: 0,\r\n                isCorrect: false\r\n              })));\r\n              setCurrentInput('');\r\n              setShowHint(false);\r\n            }}\r\n            style={{\r\n              backgroundColor: '#4caf50',\r\n              background: 'linear-gradient(45deg, #4caf50, #66bb6a)',\r\n              color: 'white',\r\n              border: 'none',\r\n              padding: '15px 30px',\r\n              borderRadius: '25px',\r\n              fontSize: '18px',\r\n              fontWeight: 'bold',\r\n              cursor: 'pointer',\r\n              boxShadow: '0 4px 15px rgba(76, 175, 80, 0.4)',\r\n              transition: 'transform 0.2s ease'\r\n            }}\r\n            onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n            onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n          >\r\n            🔄 Try Again\r\n          </button>\r\n          \r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            style={{\r\n              backgroundColor: '#2196f3',\r\n              background: 'linear-gradient(45deg, #2196f3, #21cbf3)',\r\n              color: 'white',\r\n              border: 'none',\r\n              padding: '15px 30px',\r\n              borderRadius: '25px',\r\n              fontSize: '18px',\r\n              fontWeight: 'bold',\r\n              cursor: 'pointer',\r\n              boxShadow: '0 4px 15px rgba(33, 150, 243, 0.4)',\r\n              transition: 'transform 0.2s ease'\r\n            }}\r\n            onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n            onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n          >\r\n            🏠 Back to Home\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Render sentence with blank highlighted\r\n  const renderSentenceWithBlank = (sentence: string) => {\r\n    const parts = sentence.split('[BLANK]');\r\n    return (\r\n      <span>\r\n        {parts[0]}\r\n        <span style={{\r\n          color: '#ffd700',\r\n          fontWeight: 'bold',\r\n          textDecoration: 'underline',\r\n          padding: '0 5px'\r\n        }}>\r\n          ________\r\n        </span>\r\n        {parts[1]}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      background: `linear-gradient(135deg, ${theme.primaryColor} 0%, ${theme.secondaryColor} 100%)`,\r\n      minHeight: '600px',\r\n      borderRadius: '20px',\r\n      padding: '30px',\r\n      color: theme.textColor,\r\n      fontFamily: theme.fontFamily,\r\n      position: 'relative',\r\n      overflow: 'hidden'\r\n    }}>\r\n      {/* Header */}\r\n      <div style={{ textAlign: 'center', marginBottom: '30px' }}>\r\n        <h2 style={{ \r\n          margin: 0, \r\n          fontSize: '28px', \r\n          background: 'linear-gradient(45deg, #ffd700, #ffed4e)',\r\n          WebkitBackgroundClip: 'text',\r\n          WebkitTextFillColor: 'transparent',\r\n          textShadow: '0 0 20px rgba(255, 215, 0, 0.3)'\r\n        }}>\r\n          Fill in the Blanks\r\n        </h2>\r\n        <div style={{ marginTop: '15px', display: 'flex', justifyContent: 'center', gap: '30px' }}>\r\n          <div style={{ fontSize: '16px' }}>\r\n            Question: {currentQuestionIndex + 1} / {questions.length}\r\n          </div>\r\n          <div style={{ fontSize: '16px' }}>\r\n            Score: {totalScore.toFixed(1)} / {questions.length}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div style={{\r\n        backgroundColor: 'rgba(255,255,255,0.2)',\r\n        borderRadius: '10px',\r\n        height: '8px',\r\n        marginBottom: '30px',\r\n        overflow: 'hidden'\r\n      }}>\r\n        <div style={{\r\n          background: 'linear-gradient(45deg, #ffd700, #ffed4e)',\r\n          height: '100%',\r\n          width: `${((currentQuestionIndex + 1) / questions.length) * 100}%`,\r\n          transition: 'width 0.3s ease'\r\n        }} />\r\n      </div>\r\n\r\n      {/* Star Animation */}\r\n      {showStarAnimation && (\r\n        <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', pointerEvents: 'none', zIndex: 10 }}>\r\n          {stars.map((left, i) => (\r\n            <div\r\n              key={i}\r\n              style={{\r\n                position: 'absolute',\r\n                left: `${left}%`,\r\n                top: '20%',\r\n                fontSize: '30px',\r\n                animation: 'starFall 2s ease-out forwards',\r\n                color: '#ffd700'\r\n              }}\r\n            >\r\n              ⭐\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Sad Animation */}\r\n      {showSadAnimation && (\r\n        <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', pointerEvents: 'none', zIndex: 10 }}>\r\n          {sadEmojis.map((left, i) => (\r\n            <div\r\n              key={i}\r\n              style={{\r\n                position: 'absolute',\r\n                left: `${left}%`,\r\n                top: '20%',\r\n                fontSize: '30px',\r\n                animation: 'sadShake 2s ease-out forwards',\r\n                color: '#ff6b6b'\r\n              }}\r\n            >\r\n              😢\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Question Container */}\r\n      <div style={{\r\n        backgroundColor: 'rgba(255,255,255,0.1)',\r\n        borderRadius: '15px',\r\n        padding: '30px',\r\n        marginBottom: '30px',\r\n        backdropFilter: 'blur(10px)'\r\n      }}>\r\n        <h3 style={{\r\n          fontSize: '22px',\r\n          marginBottom: '25px',\r\n          textAlign: 'center',\r\n          lineHeight: '1.4',\r\n          color: '#ffffff',\r\n          fontWeight: 'bold',\r\n          textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\r\n        }}>\r\n          {renderSentenceWithBlank(currentQuestion.sentence)}\r\n        </h3>\r\n\r\n        {/* Hint Section */}\r\n        {showHint && currentQuestion.hint && (\r\n          <div style={{\r\n            backgroundColor: 'rgba(255, 193, 7, 0.2)',\r\n            border: '2px solid #ffc107',\r\n            borderRadius: '10px',\r\n            padding: '15px',\r\n            marginBottom: '20px',\r\n            textAlign: 'center'\r\n          }}>\r\n            <div style={{ \r\n              fontSize: '16px', \r\n              fontWeight: 'bold', \r\n              color: '#ffc107',\r\n              marginBottom: '8px'\r\n            }}>\r\n              💡 Hint:\r\n            </div>\r\n            <div style={{ fontSize: '16px' }}>\r\n              {currentQuestion.hint}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Input and Submit */}\r\n        <div style={{\r\n          display: 'flex',\r\n          gap: '15px',\r\n          justifyContent: 'center',\r\n          marginBottom: '25px',\r\n          flexWrap: 'wrap'\r\n        }}>\r\n          <input\r\n            type=\"text\"\r\n            value={currentInput}\r\n            onChange={(e) => setCurrentInput(e.target.value)}\r\n            disabled={currentState.answered}\r\n            placeholder=\"Type your answer here...\"\r\n            onKeyPress={(e) => e.key === 'Enter' && handleSubmit()}\r\n            style={{\r\n              padding: '15px 20px',\r\n              borderRadius: '10px',\r\n              border: currentState.answered \r\n                ? `3px solid ${currentState.isCorrect ? '#4caf50' : '#f44336'}`\r\n                : '2px solid rgba(255,255,255,0.3)',\r\n              backgroundColor: currentState.answered ? 'rgba(255,255,255,0.9)' : 'rgba(255,255,255,0.1)',\r\n              color: currentState.answered ? '#333' : 'white',\r\n              fontSize: '16px',\r\n              minWidth: '250px',\r\n              textAlign: 'center',\r\n              outline: 'none'\r\n            }}\r\n          />\r\n          \r\n          <button\r\n            onClick={handleSubmit}\r\n            disabled={currentState.answered || !currentInput.trim()}\r\n            style={{\r\n              background: (currentState.answered || !currentInput.trim())\r\n                ? 'linear-gradient(45deg, #666, #888)'\r\n                : 'linear-gradient(45deg, #4caf50, #66bb6a)',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '10px',\r\n              padding: '15px 30px',\r\n              fontSize: '16px',\r\n              fontWeight: 'bold',\r\n              cursor: (currentState.answered || !currentInput.trim()) ? 'not-allowed' : 'pointer',\r\n              opacity: (currentState.answered || !currentInput.trim()) ? 0.5 : 1,\r\n              transition: 'transform 0.2s ease'\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              if (!currentState.answered && currentInput.trim()) {\r\n                e.currentTarget.style.transform = 'translateY(-2px)';\r\n              }\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              if (!currentState.answered && currentInput.trim()) {\r\n                e.currentTarget.style.transform = 'translateY(0)';\r\n              }\r\n            }}\r\n          >\r\n            ✓ Submit\r\n          </button>\r\n        </div>\r\n\r\n        {/* Explanation */}\r\n        {currentState.answered && currentQuestion.explanation && (\r\n          <div style={{\r\n            backgroundColor: currentState.isCorrect \r\n              ? 'rgba(76, 175, 80, 0.2)' \r\n              : 'rgba(244, 67, 54, 0.2)',\r\n            border: `2px solid ${currentState.isCorrect ? '#4caf50' : '#f44336'}`,\r\n            borderRadius: '10px',\r\n            padding: '15px',\r\n            textAlign: 'center'\r\n          }}>\r\n            <div style={{ \r\n              fontSize: '16px', \r\n              fontWeight: 'bold', \r\n              marginBottom: '8px',\r\n              color: currentState.isCorrect ? '#4caf50' : '#f44336'\r\n            }}>\r\n              {currentState.isCorrect ? '✅ Correct!' : '❌ Incorrect!'}\r\n            </div>\r\n            <div style={{ fontSize: '16px', marginBottom: '8px' }}>\r\n              {currentQuestion.explanation}\r\n            </div>\r\n            {!currentState.isCorrect && (\r\n              <div style={{ fontSize: '14px', fontStyle: 'italic', color: '#4caf50' }}>\r\n                Correct answer(s): {currentQuestion.correctAnswers.join(', ')}\r\n              </div>\r\n            )}\r\n            {currentState.usedHint && (\r\n              <div style={{ \r\n                fontSize: '14px', \r\n                marginTop: '8px', \r\n                fontStyle: 'italic',\r\n                color: '#ffc107'\r\n              }}>\r\n                💡 Hint was used - Half points awarded\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Navigation */}\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        gap: '20px'\r\n      }}>\r\n        <button\r\n          onClick={handlePrevious}\r\n          disabled={currentQuestionIndex === 0}\r\n          style={{\r\n            background: currentQuestionIndex === 0 \r\n              ? 'linear-gradient(45deg, #666, #888)' \r\n              : 'linear-gradient(45deg, #9e9e9e, #bdbdbd)',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '20px',\r\n            padding: '12px 25px',\r\n            fontSize: '16px',\r\n            fontWeight: 'bold',\r\n            cursor: currentQuestionIndex === 0 ? 'not-allowed' : 'pointer',\r\n            opacity: currentQuestionIndex === 0 ? 0.5 : 1,\r\n            transition: 'transform 0.2s ease'\r\n          }}\r\n          onMouseEnter={(e) => {\r\n            if (currentQuestionIndex !== 0) {\r\n              e.currentTarget.style.transform = 'translateY(-2px)';\r\n            }\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            if (currentQuestionIndex !== 0) {\r\n              e.currentTarget.style.transform = 'translateY(0)';\r\n            }\r\n          }}\r\n        >\r\n          ⬅ Previous\r\n        </button>\r\n\r\n        <button\r\n          onClick={handleHint}\r\n          disabled={currentState.answered || currentState.usedHint}\r\n          style={{\r\n            background: (currentState.answered || currentState.usedHint)\r\n              ? 'linear-gradient(45deg, #666, #888)'\r\n              : 'linear-gradient(45deg, #ff9800, #ffb74d)',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '20px',\r\n            padding: '12px 25px',\r\n            fontSize: '16px',\r\n            fontWeight: 'bold',\r\n            cursor: (currentState.answered || currentState.usedHint) ? 'not-allowed' : 'pointer',\r\n            opacity: (currentState.answered || currentState.usedHint) ? 0.5 : 1,\r\n            transition: 'transform 0.2s ease'\r\n          }}\r\n          onMouseEnter={(e) => {\r\n            if (!currentState.answered && !currentState.usedHint) {\r\n              e.currentTarget.style.transform = 'translateY(-2px)';\r\n            }\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            if (!currentState.answered && !currentState.usedHint) {\r\n              e.currentTarget.style.transform = 'translateY(0)';\r\n            }\r\n          }}\r\n        >\r\n          💡 Hint\r\n        </button>\r\n\r\n        {currentQuestionIndex === questions.length - 1 ? (\r\n          <button\r\n            onClick={handleFinish}\r\n            disabled={!questionStates.every(state => state.answered)}\r\n            style={{\r\n              background: !questionStates.every(state => state.answered)\r\n                ? 'linear-gradient(45deg, #666, #888)'\r\n                : 'linear-gradient(45deg, #4caf50, #66bb6a)',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '20px',\r\n              padding: '12px 25px',\r\n              fontSize: '16px',\r\n              fontWeight: 'bold',\r\n              cursor: !questionStates.every(state => state.answered) ? 'not-allowed' : 'pointer',\r\n              opacity: !questionStates.every(state => state.answered) ? 0.5 : 1,\r\n              transition: 'transform 0.2s ease'\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              if (questionStates.every(state => state.answered)) {\r\n                e.currentTarget.style.transform = 'translateY(-2px)';\r\n              }\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              if (questionStates.every(state => state.answered)) {\r\n                e.currentTarget.style.transform = 'translateY(0)';\r\n              }\r\n            }}\r\n          >\r\n            ✅ Finish\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={handleNext}\r\n            style={{\r\n              background: 'linear-gradient(45deg, #2196f3, #42a5f5)',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '20px',\r\n              padding: '12px 25px',\r\n              fontSize: '16px',\r\n              fontWeight: 'bold',\r\n              cursor: 'pointer',\r\n              transition: 'transform 0.2s ease'\r\n            }}\r\n            onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n            onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n          >\r\n            Next ➡\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Animation Styles */}\r\n      <style>\r\n        {`\r\n          @keyframes starBurst {\r\n            0% { transform: scale(0) rotate(0deg); opacity: 0; }\r\n            50% { transform: scale(1.5) rotate(180deg); opacity: 1; }\r\n            100% { transform: scale(1) rotate(360deg); opacity: 0; }\r\n          }\r\n          \r\n          @keyframes sadShake {\r\n            0%, 100% { transform: translateX(0) scale(0); opacity: 0; }\r\n            10% { transform: translateX(-10px) scale(1); opacity: 1; }\r\n            20% { transform: translateX(10px) scale(1); opacity: 1; }\r\n            30% { transform: translateX(-10px) scale(1); opacity: 1; }\r\n            40% { transform: translateX(10px) scale(1); opacity: 1; }\r\n            50% { transform: translateX(0) scale(1); opacity: 1; }\r\n            75% { transform: translateX(0) scale(1); opacity: 0.5; }\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}; ","import React, { useState } from 'react';\r\nimport { MatchFollowingQuestion, Theme } from '../../types/quiz';\r\n\r\ninterface MatchFollowingQuizProps {\r\n  questions: MatchFollowingQuestion[];\r\n  theme: Theme;\r\n  onComplete: (score: number, totalQuestions: number) => void;\r\n}\r\n\r\ninterface MatchPair {\r\n  leftId: number;\r\n  rightId: number;\r\n  leftText: string;\r\n  rightText: string;\r\n  isCorrect: boolean;\r\n}\r\n\r\nexport const MatchFollowingQuiz: React.FC<MatchFollowingQuizProps> = ({ questions, theme, onComplete }) => {\r\n  const [selectedPairs, setSelectedPairs] = useState<MatchPair[]>([]);\r\n  const [lockedLeftItems, setLockedLeftItems] = useState<number[]>([]);\r\n  const [lockedRightItems, setLockedRightItems] = useState<number[]>([]);\r\n  const [selectedLeft, setSelectedLeft] = useState<number | null>(null);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n\r\n  // For demo, we'll use the first question's pairs (normally would have multiple questions)\r\n  const currentQuestion = questions[0];\r\n  const leftItems = currentQuestion.pairs;\r\n  \r\n  // Create shuffled right options but keep them FIXED during gameplay\r\n  const [rightItems] = useState(() => {\r\n    const shuffledOptions = [...currentQuestion.pairs].sort(() => Math.random() - 0.5);\r\n    return shuffledOptions;\r\n  });\r\n\r\n  const handleLeftClick = (leftItem: any) => {\r\n    if (lockedLeftItems.includes(leftItem.id)) return;\r\n    setSelectedLeft(leftItem.id);\r\n  };\r\n\r\n  const handleRightClick = (rightItem: any) => {\r\n    if (lockedRightItems.includes(rightItem.id) || selectedLeft === null) return;\r\n\r\n    const leftItem = leftItems.find(item => item.id === selectedLeft);\r\n    if (!leftItem) return;\r\n\r\n    const newPair: MatchPair = {\r\n      leftId: leftItem.id,\r\n      rightId: rightItem.id,\r\n      leftText: leftItem.left,\r\n      rightText: rightItem.right,\r\n      isCorrect: leftItem.right === rightItem.right\r\n    };\r\n\r\n    setSelectedPairs(prev => [...prev, newPair]);\r\n    setLockedLeftItems(prev => [...prev, selectedLeft]);\r\n    setLockedRightItems(prev => [...prev, rightItem.id]);\r\n    setSelectedLeft(null);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedPairs.length !== leftItems.length) return;\r\n\r\n    const correctPairs = selectedPairs.filter(pair => pair.isCorrect).length;\r\n    setScore(correctPairs);\r\n    setIsSubmitted(true);\r\n    setShowResults(true);\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    setSelectedPairs([]);\r\n    setLockedLeftItems([]);\r\n    setLockedRightItems([]);\r\n    setSelectedLeft(null);\r\n    setIsSubmitted(false);\r\n    setShowResults(false);\r\n    setScore(0);\r\n  };\r\n\r\n  const handleFinish = () => {\r\n    setIsCompleted(true);\r\n    onComplete(score, leftItems.length);\r\n  };\r\n\r\n  if (isCompleted) {\r\n    const percentage = Math.round((score / leftItems.length) * 100);\r\n    \r\n    return (\r\n      <div style={{\r\n        background: 'linear-gradient(135deg, #9C27B0 0%, #8E24AA 100%)',\r\n        minHeight: '600px',\r\n        borderRadius: '20px',\r\n        padding: '40px',\r\n        color: 'white',\r\n        fontFamily: 'Arial, sans-serif',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}>\r\n        <div style={{ fontSize: '60px', marginBottom: '20px' }}>🎯</div>\r\n        <h2 style={{ fontSize: '36px', margin: '0 0 20px 0' }}>Match Following Completed!</h2>\r\n        \r\n        <div style={{\r\n          backgroundColor: 'rgba(255,255,255,0.2)',\r\n          borderRadius: '15px',\r\n          padding: '30px',\r\n          marginBottom: '30px',\r\n          backdropFilter: 'blur(10px)'\r\n        }}>\r\n          <div style={{ fontSize: '24px', fontWeight: 'bold', marginBottom: '15px' }}>\r\n            Final Score: {score} / {leftItems.length}\r\n          </div>\r\n          <div style={{ fontSize: '20px', marginBottom: '15px' }}>\r\n            Percentage: {percentage}%\r\n          </div>\r\n          <div style={{ fontSize: '22px', fontWeight: 'bold' }}>\r\n            {percentage >= 80 ? '⭐⭐⭐ Outstanding!' : \r\n             percentage >= 60 ? '⭐⭐ Good Job!' : \r\n             percentage >= 40 ? '⭐ Keep Learning!' : 'Try Again!'}\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => window.location.reload()}\r\n          style={{\r\n            backgroundColor: '#2196f3',\r\n            background: 'linear-gradient(45deg, #2196f3, #21cbf3)',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '15px 40px',\r\n            borderRadius: '25px',\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            cursor: 'pointer',\r\n            boxShadow: '0 4px 15px rgba(33, 150, 243, 0.4)',\r\n            transition: 'transform 0.2s ease'\r\n          }}\r\n          onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n          onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n        >\r\n          🏠 Back to Home\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      background: `linear-gradient(135deg, ${theme.primaryColor} 0%, ${theme.secondaryColor} 100%)`,\r\n      minHeight: '600px',\r\n      borderRadius: '20px',\r\n      padding: '30px',\r\n      color: theme.textColor,\r\n      fontFamily: theme.fontFamily\r\n    }}>\r\n      {/* Header */}\r\n      <div style={{ textAlign: 'center', marginBottom: '30px' }}>\r\n        <h2 style={{ \r\n          margin: 0, \r\n          fontSize: '28px', \r\n          background: 'linear-gradient(45deg, #ffd700, #ffed4e)',\r\n          WebkitBackgroundClip: 'text',\r\n          WebkitTextFillColor: 'transparent',\r\n          textShadow: '0 0 20px rgba(255, 215, 0, 0.3)'\r\n        }}>\r\n          Match the Following\r\n        </h2>\r\n        <p style={{ margin: '10px 0', opacity: 0.9 }}>\r\n          {currentQuestion.instruction}\r\n        </p>\r\n        <div style={{ fontSize: '16px', marginTop: '10px' }}>\r\n          Pairs Matched: {selectedPairs.length} / {leftItems.length}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Matching Area */}\r\n      <div style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr 1fr',\r\n        gap: '40px',\r\n        marginBottom: '30px',\r\n        backgroundColor: 'rgba(255,255,255,0.1)',\r\n        padding: '30px',\r\n        borderRadius: '15px',\r\n        backdropFilter: 'blur(10px)'\r\n      }}>\r\n        {/* Left Column */}\r\n        <div>\r\n          <h3 style={{ textAlign: 'center', marginBottom: '20px', color: '#ffed4e' }}>\r\n            Questions\r\n          </h3>\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\r\n            {leftItems.map((item, index) => {\r\n              const isLocked = lockedLeftItems.includes(item.id);\r\n              const isSelected = selectedLeft === item.id;\r\n              \r\n              return (\r\n                <div\r\n                  key={item.id}\r\n                  onClick={() => handleLeftClick(item)}\r\n                  style={{\r\n                    padding: '15px 20px',\r\n                    borderRadius: '10px',\r\n                    border: '2px solid',\r\n                    borderColor: isLocked ? '#4caf50' : isSelected ? '#ffd700' : 'rgba(255,255,255,0.3)',\r\n                    backgroundColor: isLocked ? '#4caf50' : isSelected ? 'rgba(255,215,0,0.2)' : 'rgba(255,255,255,0.1)',\r\n                    cursor: isLocked ? 'default' : 'pointer',\r\n                    transition: 'all 0.3s ease',\r\n                    opacity: isLocked ? 0.7 : 1,\r\n                    transform: isSelected ? 'scale(1.02)' : 'scale(1)',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    fontSize: '16px'\r\n                  }}\r\n                >\r\n                  <span style={{\r\n                    minWidth: '25px',\r\n                    height: '25px',\r\n                    borderRadius: '50%',\r\n                    backgroundColor: isLocked ? '#fff' : isSelected ? '#ffd700' : 'rgba(255,255,255,0.3)',\r\n                    color: isLocked || isSelected ? '#333' : '#fff',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    fontWeight: 'bold',\r\n                    marginRight: '12px',\r\n                    fontSize: '14px'\r\n                  }}>\r\n                    {index + 1}\r\n                  </span>\r\n                  <span>{item.left}</span>\r\n                  {isLocked && <span style={{ marginLeft: 'auto', fontSize: '18px' }}>🔒</span>}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right Column */}\r\n        <div>\r\n          <h3 style={{ textAlign: 'center', marginBottom: '20px', color: '#ffed4e' }}>\r\n            Options\r\n          </h3>\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\r\n            {rightItems.map((item, index) => {\r\n              const isLocked = lockedRightItems.includes(item.id);\r\n              const canSelect = selectedLeft !== null && !isLocked;\r\n              \r\n              return (\r\n                <div\r\n                  key={item.id}\r\n                  onClick={() => handleRightClick(item)}\r\n                  style={{\r\n                    padding: '15px 20px',\r\n                    borderRadius: '10px',\r\n                    border: '2px solid',\r\n                    borderColor: isLocked ? '#4caf50' : canSelect ? '#ff9800' : 'rgba(255,255,255,0.3)',\r\n                    backgroundColor: isLocked ? '#4caf50' : canSelect ? 'rgba(255,152,0,0.2)' : 'rgba(255,255,255,0.1)',\r\n                    cursor: isLocked ? 'default' : canSelect ? 'pointer' : 'not-allowed',\r\n                    transition: 'all 0.3s ease',\r\n                    opacity: isLocked ? 0.7 : canSelect ? 1 : 0.5,\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    fontSize: '16px'\r\n                  }}\r\n                  onMouseEnter={(e) => {\r\n                    if (canSelect) {\r\n                      e.currentTarget.style.transform = 'translateY(-2px)';\r\n                    }\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    if (canSelect) {\r\n                      e.currentTarget.style.transform = 'translateY(0)';\r\n                    }\r\n                  }}\r\n                >\r\n                  <span style={{\r\n                    minWidth: '25px',\r\n                    height: '25px',\r\n                    borderRadius: '50%',\r\n                    backgroundColor: isLocked ? '#fff' : canSelect ? '#ff9800' : 'rgba(255,255,255,0.3)',\r\n                    color: isLocked || canSelect ? '#333' : '#fff',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    fontWeight: 'bold',\r\n                    marginRight: '12px',\r\n                    fontSize: '14px'\r\n                  }}>\r\n                    {String.fromCharCode(65 + index)}\r\n                  </span>\r\n                  <span>{item.right}</span>\r\n                  {isLocked && <span style={{ marginLeft: 'auto', fontSize: '18px' }}>🔒</span>}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Instructions */}\r\n      {!isSubmitted && selectedPairs.length < leftItems.length && (\r\n        <div style={{\r\n          backgroundColor: 'rgba(255,215,0,0.2)',\r\n          padding: '15px',\r\n          borderRadius: '10px',\r\n          marginBottom: '20px',\r\n          border: '1px solid rgba(255,215,0,0.3)',\r\n          textAlign: 'center'\r\n        }}>\r\n          {selectedLeft ? \r\n            \"Now click an option from the right column to create a pair\" : \r\n            \"Click a question from the left column first\"}\r\n        </div>\r\n      )}\r\n\r\n      {/* Results */}\r\n      {showResults && (\r\n        <div style={{\r\n          backgroundColor: 'rgba(255,255,255,0.1)',\r\n          padding: '25px',\r\n          borderRadius: '15px',\r\n          marginBottom: '20px',\r\n          backdropFilter: 'blur(10px)'\r\n        }}>\r\n          <h3 style={{ textAlign: 'center', marginBottom: '20px', color: '#ffed4e' }}>\r\n            Results: {score} / {leftItems.length} Correct\r\n          </h3>\r\n                     <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\r\n             {selectedPairs.map((pair, index) => {\r\n               // Find the correct answer for this left item\r\n               const correctItem = leftItems.find(item => item.id === pair.leftId);\r\n               const correctAnswer = correctItem ? correctItem.right : '';\r\n               \r\n               return (\r\n                 <div key={index} style={{\r\n                   padding: '15px',\r\n                   borderRadius: '10px',\r\n                   backgroundColor: pair.isCorrect ? 'rgba(76, 175, 80, 0.3)' : 'rgba(244, 67, 54, 0.3)',\r\n                   border: `2px solid ${pair.isCorrect ? '#4caf50' : '#f44336'}`,\r\n                   display: 'flex',\r\n                   flexDirection: 'column',\r\n                   gap: '8px'\r\n                 }}>\r\n                   <div style={{\r\n                     display: 'flex',\r\n                     justifyContent: 'space-between',\r\n                     alignItems: 'center'\r\n                   }}>\r\n                     <span style={{ fontWeight: 'bold' }}>{pair.leftText}</span>\r\n                     <span style={{ \r\n                       fontSize: '20px',\r\n                       color: pair.isCorrect ? '#4caf50' : '#f44336'\r\n                     }}>\r\n                       {pair.isCorrect ? '✅' : '❌'}\r\n                     </span>\r\n                     <span style={{\r\n                       color: pair.isCorrect ? '#4caf50' : '#f44336',\r\n                       fontWeight: pair.isCorrect ? 'normal' : 'bold'\r\n                     }}>\r\n                       {pair.rightText}\r\n                     </span>\r\n                   </div>\r\n                   {!pair.isCorrect && (\r\n                     <div style={{\r\n                       fontSize: '14px',\r\n                       color: '#4caf50',\r\n                       fontStyle: 'italic',\r\n                       textAlign: 'center',\r\n                       backgroundColor: 'rgba(76, 175, 80, 0.2)',\r\n                       padding: '8px',\r\n                       borderRadius: '5px'\r\n                     }}>\r\n                       Correct Answer: {correctAnswer}\r\n                     </div>\r\n                   )}\r\n                 </div>\r\n               );\r\n             })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Action Buttons */}\r\n      <div style={{ textAlign: 'center' }}>\r\n        {!isSubmitted && selectedPairs.length === leftItems.length && (\r\n          <button\r\n            onClick={handleSubmit}\r\n            style={{\r\n              backgroundColor: '#4caf50',\r\n              background: 'linear-gradient(45deg, #4caf50, #66bb6a)',\r\n              color: 'white',\r\n              border: 'none',\r\n              padding: '15px 40px',\r\n              borderRadius: '25px',\r\n              fontSize: '18px',\r\n              fontWeight: 'bold',\r\n              cursor: 'pointer',\r\n              boxShadow: '0 4px 15px rgba(76, 175, 80, 0.4)',\r\n              transition: 'transform 0.2s ease'\r\n            }}\r\n            onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n            onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n          >\r\n            ✓ Submit Answers\r\n          </button>\r\n        )}\r\n\r\n        {showResults && (\r\n          <div style={{ display: 'flex', gap: '20px', justifyContent: 'center' }}>\r\n            <button\r\n              onClick={handleRetry}\r\n              style={{\r\n                backgroundColor: '#ff9800',\r\n                background: 'linear-gradient(45deg, #ff9800, #ffb74d)',\r\n                color: 'white',\r\n                border: 'none',\r\n                padding: '12px 30px',\r\n                borderRadius: '20px',\r\n                fontSize: '16px',\r\n                fontWeight: 'bold',\r\n                cursor: 'pointer',\r\n                boxShadow: '0 4px 15px rgba(255, 152, 0, 0.4)',\r\n                transition: 'transform 0.2s ease'\r\n              }}\r\n              onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n              onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n            >\r\n              🔄 Retry\r\n            </button>\r\n\r\n            <button\r\n              onClick={handleFinish}\r\n              style={{\r\n                backgroundColor: '#2196f3',\r\n                background: 'linear-gradient(45deg, #2196f3, #42a5f5)',\r\n                color: 'white',\r\n                border: 'none',\r\n                padding: '12px 30px',\r\n                borderRadius: '20px',\r\n                fontSize: '16px',\r\n                fontWeight: 'bold',\r\n                cursor: 'pointer',\r\n                boxShadow: '0 4px 15px rgba(33, 150, 243, 0.4)',\r\n                transition: 'transform 0.2s ease'\r\n              }}\r\n              onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n              onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n            >\r\n              ✓ Finish\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}; ","import React from 'react';\r\nimport { QuizComponentProps, MCQQuestion, TrueFalseQuestion, FillBlanksQuestion, MatchFollowingQuestion } from '../types/quiz';\r\nimport { MCQQuiz } from './quiz/MCQQuiz';\r\nimport { TrueFalseQuiz } from './quiz/TrueFalseQuiz';\r\nimport { FillBlanksQuiz } from './quiz/FillBlanksQuiz';\r\nimport { MatchFollowingQuiz } from './quiz/MatchFollowingQuiz';\r\n\r\nexport const QuizComponent = ({ \r\n  quizData, \r\n  isOpen, \r\n  onClose, \r\n  onComplete \r\n}: QuizComponentProps) => {\r\n  if (!isOpen) return null;\r\n\r\n  const handleComplete = (score: number, totalQuestions: number) => {\r\n    if (onComplete) {\r\n      onComplete(score, totalQuestions);\r\n    }\r\n  };\r\n\r\n  const renderQuizBySubtype = () => {\r\n    switch (quizData.subtype) {\r\n      case 'MCQ':\r\n        return (\r\n          <MCQQuiz\r\n            // @ts-ignore\r\n            questions={quizData.questions}\r\n            theme={quizData.theme}\r\n            onComplete={handleComplete}\r\n          />\r\n        );\r\n      case 'TrueFalse':\r\n        return (\r\n          <TrueFalseQuiz\r\n            // @ts-ignore\r\n            questions={quizData.questions}\r\n            theme={quizData.theme}\r\n            onComplete={handleComplete}\r\n          />\r\n        );\r\n      case 'FillBlanks':\r\n        return (\r\n          <FillBlanksQuiz\r\n            // @ts-ignore\r\n            questions={quizData.questions}\r\n            theme={quizData.theme}\r\n            onComplete={handleComplete}\r\n          />\r\n        );\r\n      case 'MatchFollowing':\r\n        return (\r\n          <MatchFollowingQuiz\r\n            // @ts-ignore\r\n            questions={quizData.questions}\r\n            theme={quizData.theme}\r\n            onComplete={handleComplete}\r\n          />\r\n        );\r\n      default:\r\n        return <div>Unsupported quiz type</div>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-overlay\" style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      zIndex: 1000\r\n    }}>\r\n      <div className=\"quiz-modal\" style={{\r\n        backgroundColor: quizData.theme.backgroundColor,\r\n        borderRadius: '10px',\r\n        padding: '20px',\r\n        maxWidth: '800px',\r\n        maxHeight: '80vh',\r\n        overflow: 'auto',\r\n        position: 'relative',\r\n        width: '90%'\r\n      }}>\r\n        <button \r\n          className=\"close-button\"\r\n          onClick={onClose}\r\n          style={{\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '10px',\r\n            background: 'none',\r\n            border: 'none',\r\n            fontSize: '24px',\r\n            cursor: 'pointer',\r\n            color: quizData.theme.textColor\r\n          }}\r\n        >\r\n          ×\r\n        </button>\r\n        \r\n        <div className=\"quiz-title\" style={{\r\n          textAlign: 'center',\r\n          marginBottom: '20px',\r\n          fontFamily: quizData.theme.fontFamily,\r\n          color: quizData.theme.textColor\r\n        }}>\r\n          <h2>{quizData.title}</h2>\r\n          {quizData.description && <p>{quizData.description}</p>}\r\n        </div>\r\n\r\n        {renderQuizBySubtype()}\r\n      </div>\r\n    </div>\r\n  );\r\n}; ","import React, { useState } from 'react';\r\nimport { TimelineComponentProps, TimelineEvent } from '../../types/timeline';\r\n\r\ninterface TimelineRejectionProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  message: string;\r\n}\r\n\r\nconst TimelineRejectionComponent = ({ isOpen, onClose, message }: TimelineRejectionProps) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"timeline-overlay\" style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      zIndex: 1000\r\n    }}>\r\n      <div className=\"timeline-modal\" style={{\r\n        backgroundColor: '#1a1a2e',\r\n        borderRadius: '20px',\r\n        padding: '40px',\r\n        maxWidth: '600px',\r\n        maxHeight: '80vh',\r\n        overflow: 'auto',\r\n        position: 'relative',\r\n        width: '90%',\r\n        color: '#e0dede',\r\n        fontFamily: 'Arial, sans-serif',\r\n        textAlign: 'center'\r\n      }}>\r\n        <button \r\n          className=\"close-button\"\r\n          onClick={onClose}\r\n          style={{\r\n            position: 'absolute',\r\n            top: '15px',\r\n            right: '20px',\r\n            background: 'none',\r\n            border: 'none',\r\n            fontSize: '24px',\r\n            cursor: 'pointer',\r\n            color: '#e0dede'\r\n          }}\r\n        >\r\n          ×\r\n        </button>\r\n\r\n        <div style={{ fontSize: '60px', marginBottom: '20px' }}>⚠️</div>\r\n        \r\n        <h2 style={{ \r\n          fontSize: '28px', \r\n          marginBottom: '20px',\r\n          background: 'linear-gradient(45deg, #ff9800, #f57c00)',\r\n          WebkitBackgroundClip: 'text',\r\n          WebkitTextFillColor: 'transparent'\r\n        }}>\r\n          Timeline Not Suitable\r\n        </h2>\r\n        \r\n        <div style={{\r\n          backgroundColor: 'rgba(255, 152, 0, 0.1)',\r\n          border: '2px solid #ff9800',\r\n          borderRadius: '15px',\r\n          padding: '20px',\r\n          marginBottom: '30px',\r\n          lineHeight: '1.6'\r\n        }}>\r\n          <p style={{ fontSize: '16px', margin: 0 }}>\r\n            {message}\r\n          </p>\r\n        </div>\r\n\r\n        <div style={{\r\n          backgroundColor: 'rgba(33, 150, 243, 0.1)',\r\n          border: '2px solid #2196f3',\r\n          borderRadius: '15px',\r\n          padding: '20px',\r\n          marginBottom: '30px'\r\n        }}>\r\n          <h3 style={{ color: '#2196f3', marginTop: 0 }}>💡 Suggested Alternatives:</h3>\r\n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))', gap: '10px' }}>\r\n            <div style={{ padding: '10px', backgroundColor: 'rgba(76, 175, 80, 0.2)', borderRadius: '8px' }}>\r\n              🧠 <strong>MindMap</strong><br/>\r\n              <small>Organize concepts</small>\r\n            </div>\r\n            <div style={{ padding: '10px', backgroundColor: 'rgba(156, 39, 176, 0.2)', borderRadius: '8px' }}>\r\n              🃏 <strong>Flashcards</strong><br/>\r\n              <small>Memorize key points</small>\r\n            </div>\r\n            <div style={{ padding: '10px', backgroundColor: 'rgba(255, 152, 0, 0.2)', borderRadius: '8px' }}>\r\n              📝 <strong>Quiz</strong><br/>\r\n              <small>Test knowledge</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          onClick={onClose}\r\n          style={{\r\n            background: 'linear-gradient(45deg, #2196f3, #42a5f5)',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '20px',\r\n            padding: '15px 30px',\r\n            fontSize: '16px',\r\n            fontWeight: 'bold',\r\n            cursor: 'pointer',\r\n            transition: 'transform 0.2s ease'\r\n          }}\r\n          onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n          onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n        >\r\n          🏠 Back to Options\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { TimelineRejectionComponent };\r\n\r\nexport const TimelineComponent = ({ \r\n  timelineData, \r\n  isOpen, \r\n  onClose, \r\n  onComplete \r\n}: TimelineComponentProps) => {\r\n  const [currentEventIndex, setCurrentEventIndex] = useState(0);\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  // Handle rejection response\r\n  if (timelineData && 'error' in timelineData && timelineData.error === 'TIMELINE_NOT_SUITABLE') {\r\n    return (\r\n      <TimelineRejectionComponent \r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        message={timelineData.message}\r\n      />\r\n    );\r\n  }\r\n\r\n  const currentEvent = timelineData.events[currentEventIndex];\r\n  const totalEvents = timelineData.events.length;\r\n\r\n  const handleNext = () => {\r\n    if (currentEventIndex < totalEvents - 1) {\r\n      setCurrentEventIndex(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentEventIndex > 0) {\r\n      setCurrentEventIndex(prev => prev - 1);\r\n    }\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    setIsCompleted(true);\r\n    if (onComplete) {\r\n      onComplete();\r\n    }\r\n  };\r\n\r\n  const getImportanceColor = (importance: string) => {\r\n    switch (importance) {\r\n      case 'high': return '#f44336';\r\n      case 'medium': return '#ff9800';\r\n      case 'low': return '#4caf50';\r\n      default: return '#9e9e9e';\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', { \r\n      year: 'numeric', \r\n      month: 'long', \r\n      day: 'numeric' \r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"timeline-overlay\" style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      zIndex: 1000\r\n    }}>\r\n      <div className=\"timeline-modal\" style={{\r\n        backgroundColor: timelineData.theme.backgroundColor,\r\n        borderRadius: '20px',\r\n        padding: '30px',\r\n        maxWidth: '1000px',\r\n        maxHeight: '80vh',\r\n        overflow: 'auto',\r\n        position: 'relative',\r\n        width: '95%',\r\n        color: timelineData.theme.textColor,\r\n        fontFamily: timelineData.theme.fontFamily\r\n      }}>\r\n        <button \r\n          className=\"close-button\"\r\n          onClick={onClose}\r\n          style={{\r\n            position: 'absolute',\r\n            top: '15px',\r\n            right: '20px',\r\n            background: 'none',\r\n            border: 'none',\r\n            fontSize: '24px',\r\n            cursor: 'pointer',\r\n            color: timelineData.theme.textColor\r\n          }}\r\n        >\r\n          ×\r\n        </button>\r\n\r\n        {/* Completion Screen */}\r\n        {isCompleted && (\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.9)',\r\n            borderRadius: '20px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            zIndex: 1000\r\n          }}>\r\n            <div style={{ textAlign: 'center', color: 'white' }}>\r\n              <div style={{ fontSize: '60px', marginBottom: '20px' }}>🕐</div>\r\n              <h2 style={{ fontSize: '32px', marginBottom: '15px', color: timelineData.theme.primaryColor }}>\r\n                Timeline Complete!\r\n              </h2>\r\n              <p style={{ fontSize: '18px', marginBottom: '10px' }}>\r\n                You've explored all {totalEvents} events!\r\n              </p>\r\n              <p style={{ fontSize: '16px', marginBottom: '30px', opacity: 0.8 }}>\r\n                Timeline journey finished\r\n              </p>\r\n              <div style={{ display: 'flex', gap: '15px', justifyContent: 'center' }}>\r\n                <button\r\n                  onClick={() => {\r\n                    setIsCompleted(false);\r\n                    setCurrentEventIndex(0);\r\n                  }}\r\n                  style={{\r\n                    background: 'linear-gradient(45deg, #2196f3, #42a5f5)',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '20px',\r\n                    padding: '15px 25px',\r\n                    fontSize: '16px',\r\n                    fontWeight: 'bold',\r\n                    cursor: 'pointer',\r\n                    transition: 'transform 0.2s ease'\r\n                  }}\r\n                  onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n                  onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n                >\r\n                  🔄 Start Over\r\n                </button>\r\n                <button\r\n                  onClick={onClose}\r\n                  style={{\r\n                    background: `linear-gradient(45deg, ${timelineData.theme.primaryColor}, #66bb6a)`,\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '20px',\r\n                    padding: '15px 25px',\r\n                    fontSize: '16px',\r\n                    fontWeight: 'bold',\r\n                    cursor: 'pointer',\r\n                    transition: 'transform 0.2s ease'\r\n                  }}\r\n                  onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n                  onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n                >\r\n                  🏠 Return Home\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Header */}\r\n        <div style={{ textAlign: 'center', marginBottom: '30px' }}>\r\n          <h2 style={{ \r\n            margin: 0, \r\n            fontSize: '28px', \r\n            background: `linear-gradient(45deg, ${timelineData.theme.primaryColor}, #66bb6a)`,\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent',\r\n            textShadow: '0 0 20px rgba(76, 175, 80, 0.3)'\r\n          }}>\r\n            🕐 {timelineData.title}\r\n          </h2>\r\n          {timelineData.description && (\r\n            <p style={{ margin: '10px 0', opacity: 0.8 }}>{timelineData.description}</p>\r\n          )}\r\n          <div style={{ marginTop: '15px', display: 'flex', justifyContent: 'center', gap: '30px' }}>\r\n            <div style={{ fontSize: '16px' }}>\r\n              Event: {currentEventIndex + 1} / {totalEvents}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Progress Bar */}\r\n        <div style={{\r\n          backgroundColor: 'rgba(255,255,255,0.2)',\r\n          borderRadius: '10px',\r\n          height: '8px',\r\n          marginBottom: '30px',\r\n          overflow: 'hidden'\r\n        }}>\r\n          <div style={{\r\n            background: `linear-gradient(45deg, ${timelineData.theme.primaryColor}, #66bb6a)`,\r\n            height: '100%',\r\n            width: `${((currentEventIndex + 1) / totalEvents) * 100}%`,\r\n            transition: 'width 0.3s ease'\r\n          }} />\r\n        </div>\r\n\r\n        {/* Timeline Event */}\r\n        <div style={{\r\n          marginBottom: '30px',\r\n          minHeight: '300px',\r\n          maxWidth: '800px',\r\n          margin: '0 auto 30px auto',\r\n          backgroundColor: 'rgba(255,255,255,0.1)',\r\n          border: `3px solid ${timelineData.theme.primaryColor}`,\r\n          borderRadius: '15px',\r\n          padding: '30px',\r\n          position: 'relative'\r\n        }}>\r\n          {/* Importance Badge */}\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: '15px',\r\n            right: '15px',\r\n            backgroundColor: getImportanceColor(currentEvent.importance),\r\n            color: 'white',\r\n            padding: '5px 12px',\r\n            borderRadius: '15px',\r\n            fontSize: '12px',\r\n            fontWeight: 'bold',\r\n            textTransform: 'uppercase'\r\n          }}>\r\n            {currentEvent.importance} importance\r\n          </div>\r\n\r\n          {/* Date */}\r\n          <div style={{\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            color: timelineData.theme.primaryColor,\r\n            marginBottom: '15px'\r\n          }}>\r\n            📅 {formatDate(currentEvent.date)}\r\n            {currentEvent.endDate && ` - ${formatDate(currentEvent.endDate)}`}\r\n          </div>\r\n\r\n          {/* Title */}\r\n          <h3 style={{\r\n            fontSize: '24px',\r\n            marginBottom: '20px',\r\n            color: timelineData.theme.textColor,\r\n            fontWeight: 'bold'\r\n          }}>\r\n            {currentEvent.title}\r\n          </h3>\r\n\r\n          {/* Description */}\r\n          <p style={{\r\n            fontSize: '16px',\r\n            lineHeight: '1.6',\r\n            color: timelineData.theme.textColor,\r\n            opacity: 0.9\r\n          }}>\r\n            {currentEvent.description}\r\n          </p>\r\n\r\n          {/* Category */}\r\n          <div style={{\r\n            position: 'absolute',\r\n            bottom: '15px',\r\n            left: '15px',\r\n            backgroundColor: 'rgba(255,255,255,0.2)',\r\n            padding: '5px 10px',\r\n            borderRadius: '10px',\r\n            fontSize: '12px',\r\n            fontWeight: 'bold'\r\n          }}>\r\n            📂 {currentEvent.category}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Navigation */}\r\n        <div style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          gap: '20px',\r\n          marginTop: '20px',\r\n          paddingTop: '20px',\r\n          borderTop: '1px solid rgba(255,255,255,0.1)'\r\n        }}>\r\n          <button\r\n            onClick={handlePrevious}\r\n            disabled={currentEventIndex === 0}\r\n            style={{\r\n              background: currentEventIndex === 0 \r\n                ? 'linear-gradient(45deg, #666, #888)' \r\n                : 'linear-gradient(45deg, #9e9e9e, #bdbdbd)',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '15px',\r\n              padding: '12px 24px',\r\n              fontSize: '15px',\r\n              fontWeight: 'bold',\r\n              cursor: currentEventIndex === 0 ? 'not-allowed' : 'pointer',\r\n              opacity: currentEventIndex === 0 ? 0.5 : 1,\r\n              transition: 'transform 0.2s ease',\r\n              minWidth: '110px'\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              if (currentEventIndex !== 0) {\r\n                e.currentTarget.style.transform = 'translateY(-2px)';\r\n              }\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              if (currentEventIndex !== 0) {\r\n                e.currentTarget.style.transform = 'translateY(0)';\r\n              }\r\n            }}\r\n          >\r\n            ⬅ Previous\r\n          </button>\r\n\r\n          {currentEventIndex === totalEvents - 1 ? (\r\n            <button\r\n              onClick={handleComplete}\r\n              style={{\r\n                background: `linear-gradient(45deg, ${timelineData.theme.primaryColor}, #66bb6a)`,\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '15px',\r\n                padding: '12px 24px',\r\n                fontSize: '15px',\r\n                fontWeight: 'bold',\r\n                cursor: 'pointer',\r\n                transition: 'transform 0.2s ease',\r\n                minWidth: '110px'\r\n              }}\r\n              onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n              onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n            >\r\n              ✅ Complete\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={handleNext}\r\n              style={{\r\n                background: `linear-gradient(45deg, ${timelineData.theme.primaryColor}, #66bb6a)`,\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '15px',\r\n                padding: '12px 24px',\r\n                fontSize: '15px',\r\n                fontWeight: 'bold',\r\n                cursor: 'pointer',\r\n                transition: 'transform 0.2s ease',\r\n                minWidth: '110px'\r\n              }}\r\n              onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n              onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n            >\r\n              Next ➡\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}; ","import React, { useState } from 'react';\r\nimport { MindmapComponentProps, MindmapNode } from '../../types/mindmap';\r\n\r\n// Helper function to get all nodes from the mindmap structure\r\nconst getAllNodes = (nodes: MindmapNode[]): MindmapNode[] => {\r\n  let allNodes: MindmapNode[] = [];\r\n  const traverse = (nodeList: MindmapNode[]) => {\r\n    nodeList.forEach(node => {\r\n      allNodes.push(node);\r\n      if (node.children) {\r\n        traverse(node.children);\r\n      }\r\n    });\r\n  };\r\n  traverse(nodes);\r\n  return allNodes;\r\n};\r\n\r\nexport const MindmapComponent = ({ \r\n  mindmapData, \r\n  isOpen, \r\n  onClose, \r\n  onComplete \r\n}: MindmapComponentProps) => {\r\n  const [selectedNodeId, setSelectedNodeId] = useState<string>('root');\r\n  \r\n  // Initialize with ALL nodes expanded for complete visibility\r\n  const getInitialExpandedNodes = () => {\r\n    const expanded = new Set<string>();\r\n    const allNodes = getAllNodes(mindmapData.nodes);\r\n    allNodes.forEach(node => {\r\n      expanded.add(node.id);\r\n    });\r\n    return expanded;\r\n  };\r\n  \r\n  const [expandedNodes, setExpandedNodes] = useState<Set<string>>(getInitialExpandedNodes());\r\n  const [viewedNodes, setViewedNodes] = useState<Set<string>>(new Set(['root']));\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const findNodeById = (nodes: MindmapNode[], id: string): MindmapNode | null => {\r\n    for (const node of nodes) {\r\n      if (node.id === id) return node;\r\n      if (node.children) {\r\n        const found = findNodeById(node.children, id);\r\n        if (found) return found;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const toggleNode = (nodeId: string) => {\r\n    const newExpanded = new Set(expandedNodes);\r\n    if (newExpanded.has(nodeId)) {\r\n      newExpanded.delete(nodeId);\r\n    } else {\r\n      newExpanded.add(nodeId);\r\n    }\r\n    setExpandedNodes(newExpanded);\r\n  };\r\n\r\n  const selectNode = (nodeId: string) => {\r\n    setSelectedNodeId(nodeId);\r\n    setViewedNodes(prev => new Set([...Array.from(prev), nodeId]));\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    setIsCompleted(true);\r\n    if (onComplete) {\r\n      onComplete();\r\n    }\r\n  };\r\n\r\n  const selectedNode = findNodeById(mindmapData.nodes, selectedNodeId);\r\n  const allNodes = getAllNodes(mindmapData.nodes);\r\n  const totalNodes = allNodes.length;\r\n  const exploredNodes = viewedNodes.size;\r\n\r\n  const renderNode = (node: MindmapNode, level: number = 0) => {\r\n    const isExpanded = expandedNodes.has(node.id);\r\n    const isSelected = selectedNodeId === node.id;\r\n    const hasChildren = node.children && node.children.length > 0;\r\n\r\n    return (\r\n      <div key={node.id} style={{ marginLeft: `${level * 30}px`, marginBottom: '10px' }}>\r\n        <div\r\n          onClick={() => selectNode(node.id)}\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: '8px 12px',\r\n            backgroundColor: isSelected \r\n              ? `${mindmapData.theme.primaryColor}40` \r\n              : 'rgba(255,255,255,0.1)',\r\n            border: isSelected \r\n              ? `2px solid ${mindmapData.theme.primaryColor}` \r\n              : '1px solid rgba(255,255,255,0.2)',\r\n            borderRadius: '8px',\r\n            cursor: 'pointer',\r\n            transition: 'all 0.2s ease',\r\n            maxWidth: '300px'\r\n          }}\r\n        >\r\n          {hasChildren && (\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                toggleNode(node.id);\r\n              }}\r\n              style={{\r\n                background: 'none',\r\n                border: 'none',\r\n                marginRight: '8px',\r\n                cursor: 'pointer',\r\n                fontSize: '12px',\r\n                color: mindmapData.theme.primaryColor\r\n              }}\r\n            >\r\n              {isExpanded ? '▼' : '▶'}\r\n            </button>\r\n          )}\r\n          <div style={{\r\n            fontSize: node.type === 'root' ? '16px' : '14px',\r\n            fontWeight: node.type === 'root' ? 'bold' : 'normal',\r\n            color: mindmapData.theme.textColor\r\n          }}>\r\n            {node.type === 'root' ? '🧠' : '💡'} {node.label}\r\n          </div>\r\n        </div>\r\n        \r\n        {hasChildren && isExpanded && (\r\n          <div style={{ marginTop: '5px' }}>\r\n            {node.children?.map(child => renderNode(child, level + 1))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"mindmap-overlay\" style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      zIndex: 1000\r\n    }}>\r\n      <div className=\"mindmap-modal\" style={{\r\n        backgroundColor: mindmapData.theme.backgroundColor,\r\n        borderRadius: '20px',\r\n        padding: '30px',\r\n        maxWidth: '1000px',\r\n        maxHeight: '80vh',\r\n        overflow: 'auto',\r\n        position: 'relative',\r\n        width: '95%',\r\n        color: mindmapData.theme.textColor,\r\n        fontFamily: mindmapData.theme.fontFamily\r\n      }}>\r\n        <button \r\n          className=\"close-button\"\r\n          onClick={onClose}\r\n          style={{\r\n            position: 'absolute',\r\n            top: '15px',\r\n            right: '20px',\r\n            background: 'none',\r\n            border: 'none',\r\n            fontSize: '24px',\r\n            cursor: 'pointer',\r\n            color: mindmapData.theme.textColor\r\n          }}\r\n        >\r\n          ×\r\n        </button>\r\n\r\n        {/* Completion Screen */}\r\n        {isCompleted && (\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.9)',\r\n            borderRadius: '20px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            zIndex: 1000\r\n          }}>\r\n            <div style={{ textAlign: 'center', color: 'white' }}>\r\n              <div style={{ fontSize: '60px', marginBottom: '20px' }}>🧠</div>\r\n              <h2 style={{ fontSize: '32px', marginBottom: '15px', color: mindmapData.theme.primaryColor }}>\r\n                Mindmap Explored!\r\n              </h2>\r\n              <p style={{ fontSize: '18px', marginBottom: '10px' }}>\r\n                You've explored the knowledge structure!\r\n              </p>\r\n              <p style={{ fontSize: '16px', marginBottom: '30px', opacity: 0.8 }}>\r\n                All {totalNodes} nodes explored successfully!\r\n              </p>\r\n              <div style={{ display: 'flex', gap: '15px', justifyContent: 'center' }}>\r\n                <button\r\n                  onClick={() => {\r\n                    setIsCompleted(false);\r\n                    setSelectedNodeId('root');\r\n                    setExpandedNodes(getInitialExpandedNodes());\r\n                    setViewedNodes(new Set(['root']));\r\n                  }}\r\n                  style={{\r\n                    background: 'linear-gradient(45deg, #2196f3, #42a5f5)',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '20px',\r\n                    padding: '15px 25px',\r\n                    fontSize: '16px',\r\n                    fontWeight: 'bold',\r\n                    cursor: 'pointer',\r\n                    transition: 'transform 0.2s ease'\r\n                  }}\r\n                  onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n                  onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n                >\r\n                  🔄 Reset\r\n                </button>\r\n                <button\r\n                  onClick={onClose}\r\n                  style={{\r\n                    background: `linear-gradient(45deg, ${mindmapData.theme.primaryColor}, #66bb6a)`,\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '20px',\r\n                    padding: '15px 25px',\r\n                    fontSize: '16px',\r\n                    fontWeight: 'bold',\r\n                    cursor: 'pointer',\r\n                    transition: 'transform 0.2s ease'\r\n                  }}\r\n                  onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n                  onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n                >\r\n                  🏠 Return Home\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Header */}\r\n        <div style={{ textAlign: 'center', marginBottom: '30px' }}>\r\n          <h2 style={{ \r\n            margin: 0, \r\n            fontSize: '28px', \r\n            background: `linear-gradient(45deg, ${mindmapData.theme.primaryColor}, #66bb6a)`,\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent',\r\n            textShadow: '0 0 20px rgba(76, 175, 80, 0.3)'\r\n          }}>\r\n            🧠 {mindmapData.title}\r\n          </h2>\r\n          {mindmapData.description && (\r\n            <p style={{ margin: '10px 0', opacity: 0.8 }}>{mindmapData.description}</p>\r\n          )}\r\n          <div style={{ marginTop: '15px', display: 'flex', justifyContent: 'center', gap: '30px' }}>\r\n            <div style={{ fontSize: '16px' }}>\r\n              Total Nodes: {totalNodes}\r\n            </div>\r\n            <div style={{ fontSize: '16px' }}>\r\n              Viewed: {exploredNodes}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Progress Bar */}\r\n        <div style={{\r\n          backgroundColor: 'rgba(255,255,255,0.2)',\r\n          borderRadius: '10px',\r\n          height: '8px',\r\n          marginBottom: '30px',\r\n          overflow: 'hidden'\r\n        }}>\r\n          <div style={{\r\n            background: `linear-gradient(45deg, ${mindmapData.theme.primaryColor}, #66bb6a)`,\r\n            height: '100%',\r\n            width: `${(exploredNodes / totalNodes) * 100}%`,\r\n            transition: 'width 0.3s ease'\r\n          }} />\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div style={{ display: 'flex', gap: '30px', minHeight: '400px' }}>\r\n          {/* Left Panel - Tree View */}\r\n          <div style={{\r\n            flex: 1,\r\n            backgroundColor: 'rgba(255,255,255,0.05)',\r\n            borderRadius: '15px',\r\n            padding: '20px',\r\n            border: `2px solid ${mindmapData.theme.primaryColor}40`,\r\n            maxHeight: '400px',\r\n            overflow: 'auto'\r\n          }}>\r\n            <h3 style={{ \r\n              marginTop: 0, \r\n              marginBottom: '20px',\r\n              color: mindmapData.theme.primaryColor,\r\n              fontSize: '18px'\r\n            }}>\r\n              📋 Knowledge Structure\r\n            </h3>\r\n            {mindmapData.nodes.map(node => renderNode(node))}\r\n          </div>\r\n\r\n          {/* Right Panel - Selected Node Details */}\r\n          <div style={{\r\n            flex: 1,\r\n            backgroundColor: 'rgba(255,255,255,0.05)',\r\n            borderRadius: '15px',\r\n            padding: '20px',\r\n            border: `2px solid ${mindmapData.theme.primaryColor}40`\r\n          }}>\r\n            <h3 style={{ \r\n              marginTop: 0, \r\n              marginBottom: '20px',\r\n              color: mindmapData.theme.primaryColor,\r\n              fontSize: '18px'\r\n            }}>\r\n              🔍 Node Details\r\n            </h3>\r\n            \r\n            {selectedNode && (\r\n              <div>\r\n                <div style={{\r\n                  fontSize: '20px',\r\n                  fontWeight: 'bold',\r\n                  marginBottom: '15px',\r\n                  color: mindmapData.theme.textColor\r\n                }}>\r\n                  {selectedNode.type === 'root' ? '🧠' : '💡'} {selectedNode.label}\r\n                </div>\r\n                \r\n                <div style={{\r\n                  backgroundColor: selectedNode.type === 'root' \r\n                    ? `${mindmapData.theme.primaryColor}20` \r\n                    : 'rgba(255,255,255,0.1)',\r\n                  padding: '10px',\r\n                  borderRadius: '8px',\r\n                  marginBottom: '15px'\r\n                }}>\r\n                  <strong>Type:</strong> {selectedNode.type === 'root' ? 'Root Concept' : 'Sub-concept'}\r\n                </div>\r\n\r\n                {/* Node Description */}\r\n                {selectedNode.description && (\r\n                  <div style={{\r\n                    backgroundColor: 'rgba(255,255,255,0.08)',\r\n                    border: `1px solid ${mindmapData.theme.primaryColor}40`,\r\n                    padding: '15px',\r\n                    borderRadius: '8px',\r\n                    marginBottom: '15px',\r\n                    lineHeight: '1.5'\r\n                  }}>\r\n                    <strong style={{ color: mindmapData.theme.primaryColor, marginBottom: '8px', display: 'block' }}>\r\n                      📝 Description:\r\n                    </strong>\r\n                    <div style={{ \r\n                      fontSize: '15px', \r\n                      color: mindmapData.theme.textColor,\r\n                      opacity: 0.9\r\n                    }}>\r\n                      {selectedNode.description}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {selectedNode.children && selectedNode.children.length > 0 && (\r\n                  <div>\r\n                    <strong style={{ color: mindmapData.theme.primaryColor }}>\r\n                      Connected concepts:\r\n                    </strong>\r\n                    <ul style={{ marginTop: '10px', paddingLeft: '20px' }}>\r\n                      {selectedNode.children.map(child => (\r\n                        <li \r\n                          key={child.id} \r\n                          style={{ \r\n                            marginBottom: '5px',\r\n                            cursor: 'pointer',\r\n                            color: mindmapData.theme.textColor,\r\n                            opacity: 0.8\r\n                          }}\r\n                          onClick={() => selectNode(child.id)}\r\n                        >\r\n                          💡 {child.label}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Show connections */}\r\n                {mindmapData.connections.some(conn => conn.from === selectedNodeId || conn.to === selectedNodeId) && (\r\n                  <div style={{ marginTop: '20px' }}>\r\n                    <strong style={{ color: mindmapData.theme.primaryColor }}>\r\n                      Relationships:\r\n                    </strong>\r\n                    <div style={{ marginTop: '10px' }}>\r\n                      {mindmapData.connections\r\n                        .filter(conn => conn.from === selectedNodeId || conn.to === selectedNodeId)\r\n                        .map((conn, index) => (\r\n                          <div key={index} style={{\r\n                            backgroundColor: 'rgba(255,255,255,0.1)',\r\n                            padding: '8px',\r\n                            borderRadius: '5px',\r\n                            marginBottom: '5px',\r\n                            fontSize: '14px'\r\n                          }}>\r\n                            {conn.from === selectedNodeId \r\n                              ? `→ ${conn.label} → ${findNodeById(mindmapData.nodes, conn.to)?.label}`\r\n                              : `← ${conn.label} ← ${findNodeById(mindmapData.nodes, conn.from)?.label}`\r\n                            }\r\n                          </div>\r\n                        ))\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Navigation */}\r\n        <div style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          gap: '20px',\r\n          marginTop: '20px',\r\n          paddingTop: '20px',\r\n          borderTop: '1px solid rgba(255,255,255,0.1)'\r\n        }}>\r\n          <button\r\n            onClick={handleComplete}\r\n            style={{\r\n              background: `linear-gradient(45deg, ${mindmapData.theme.primaryColor}, #66bb6a)`,\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '15px',\r\n              padding: '12px 24px',\r\n              fontSize: '15px',\r\n              fontWeight: 'bold',\r\n              cursor: 'pointer',\r\n              transition: 'transform 0.2s ease',\r\n              minWidth: '110px'\r\n            }}\r\n            onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n            onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n          >\r\n            ✅ Complete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}; ","import React, { useState } from 'react';\r\nimport { FlashcardComponentProps, FlashcardItem } from '../../types/flashcard';\r\n\r\nexport const FlashcardComponent = ({ \r\n  flashcardData, \r\n  isOpen, \r\n  onClose, \r\n  onComplete \r\n}: FlashcardComponentProps) => {\r\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n  const [showHint, setShowHint] = useState(false);\r\n  const [studiedCards, setStudiedCards] = useState<Set<number>>(new Set());\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const currentCard = flashcardData.cards[currentCardIndex];\r\n  const totalCards = flashcardData.cards.length;\r\n\r\n  const handleNext = () => {\r\n    if (currentCardIndex < totalCards - 1) {\r\n      setCurrentCardIndex(prev => prev + 1);\r\n      setIsFlipped(false);\r\n      setShowHint(false);\r\n      setStudiedCards(prev => {\r\n      const newSet = new Set(prev);\r\n      newSet.add(currentCard.id);\r\n      return newSet;\r\n    });\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentCardIndex > 0) {\r\n      setCurrentCardIndex(prev => prev - 1);\r\n      setIsFlipped(false);\r\n      setShowHint(false);\r\n    }\r\n  };\r\n\r\n  const handleFlip = () => {\r\n    setIsFlipped(!isFlipped);\r\n    setShowHint(false);\r\n  };\r\n\r\n  const handleShowHint = () => {\r\n    setShowHint(!showHint);\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    setStudiedCards(prev => {\r\n      const newSet = new Set(prev);\r\n      newSet.add(currentCard.id);\r\n      return newSet;\r\n    });\r\n    setIsCompleted(true);\r\n    if (onComplete) {\r\n      onComplete();\r\n    }\r\n  };\r\n\r\n  const getDifficultyColor = (difficulty: string) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#4caf50';\r\n      case 'medium': return '#ff9800';\r\n      case 'hard': return '#f44336';\r\n      default: return '#9e9e9e';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flashcard-overlay\" style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      zIndex: 1000\r\n    }}>\r\n      <div className=\"flashcard-modal\" style={{\r\n        backgroundColor: flashcardData.theme.backgroundColor,\r\n        borderRadius: '20px',\r\n        padding: '30px',\r\n        maxWidth: '1000px',\r\n        maxHeight: '80vh',\r\n        overflow: 'auto',\r\n        position: 'relative',\r\n        width: '95%',\r\n        color: flashcardData.theme.textColor,\r\n        fontFamily: flashcardData.theme.fontFamily\r\n      }}>\r\n        <button \r\n          className=\"close-button\"\r\n          onClick={onClose}\r\n          style={{\r\n            position: 'absolute',\r\n            top: '15px',\r\n            right: '20px',\r\n            background: 'none',\r\n            border: 'none',\r\n            fontSize: '24px',\r\n            cursor: 'pointer',\r\n            color: flashcardData.theme.textColor\r\n          }}\r\n        >\r\n          ×\r\n        </button>\r\n\r\n        {/* Completion Screen */}\r\n        {isCompleted && (\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.9)',\r\n            borderRadius: '20px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            zIndex: 1000\r\n          }}>\r\n            <div style={{ textAlign: 'center', color: 'white' }}>\r\n              <div style={{ fontSize: '60px', marginBottom: '20px' }}>🎉</div>\r\n              <h2 style={{ fontSize: '32px', marginBottom: '15px', color: '#4caf50' }}>\r\n                Congratulations!\r\n              </h2>\r\n              <p style={{ fontSize: '18px', marginBottom: '10px' }}>\r\n                You've completed all {totalCards} flashcards!\r\n              </p>\r\n              <p style={{ fontSize: '16px', marginBottom: '30px', opacity: 0.8 }}>\r\n                Cards studied: {totalCards} / {totalCards}\r\n              </p>\r\n              <div style={{ display: 'flex', gap: '15px', justifyContent: 'center' }}>\r\n                <button\r\n                  onClick={() => {\r\n                    setIsCompleted(false);\r\n                    setCurrentCardIndex(0);\r\n                    setIsFlipped(false);\r\n                    setShowHint(false);\r\n                    setStudiedCards(new Set());\r\n                  }}\r\n                  style={{\r\n                    background: 'linear-gradient(45deg, #2196f3, #42a5f5)',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '20px',\r\n                    padding: '15px 25px',\r\n                    fontSize: '16px',\r\n                    fontWeight: 'bold',\r\n                    cursor: 'pointer',\r\n                    transition: 'transform 0.2s ease'\r\n                  }}\r\n                  onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n                  onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n                >\r\n                  🔄 Study Again\r\n                </button>\r\n                <button\r\n                  onClick={onClose}\r\n                  style={{\r\n                    background: 'linear-gradient(45deg, #4caf50, #66bb6a)',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '20px',\r\n                    padding: '15px 25px',\r\n                    fontSize: '16px',\r\n                    fontWeight: 'bold',\r\n                    cursor: 'pointer',\r\n                    transition: 'transform 0.2s ease'\r\n                  }}\r\n                  onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n                  onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n                >\r\n                  🏠 Return Home\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Header */}\r\n        <div style={{ textAlign: 'center', marginBottom: '30px' }}>\r\n          <h2 style={{ \r\n            margin: 0, \r\n            fontSize: '28px', \r\n            background: `linear-gradient(45deg, ${flashcardData.theme.primaryColor}, #66bb6a)`,\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent',\r\n            textShadow: '0 0 20px rgba(76, 175, 80, 0.3)'\r\n          }}>\r\n            📚 {flashcardData.title}\r\n          </h2>\r\n          {flashcardData.description && (\r\n            <p style={{ margin: '10px 0', opacity: 0.8 }}>{flashcardData.description}</p>\r\n          )}\r\n          <div style={{ marginTop: '15px', display: 'flex', justifyContent: 'center', gap: '30px' }}>\r\n            <div style={{ fontSize: '16px' }}>\r\n              Card: {currentCardIndex + 1} / {totalCards}\r\n            </div>\r\n            <div style={{ fontSize: '16px' }}>\r\n              Studied: {studiedCards.size} / {totalCards}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Progress Bar */}\r\n        <div style={{\r\n          backgroundColor: 'rgba(255,255,255,0.2)',\r\n          borderRadius: '10px',\r\n          height: '8px',\r\n          marginBottom: '30px',\r\n          overflow: 'hidden'\r\n        }}>\r\n          <div style={{\r\n            background: `linear-gradient(45deg, ${flashcardData.theme.primaryColor}, #66bb6a)`,\r\n            height: '100%',\r\n            width: `${((currentCardIndex + 1) / totalCards) * 100}%`,\r\n            transition: 'width 0.3s ease'\r\n          }} />\r\n        </div>\r\n\r\n        {/* Flashcard */}\r\n        <div style={{\r\n          perspective: '1000px',\r\n          marginBottom: '30px',\r\n          height: '180px',\r\n          maxWidth: '700px',\r\n          margin: '0 auto 30px auto'\r\n        }}>\r\n          <div\r\n            onClick={handleFlip}\r\n            style={{\r\n              position: 'relative',\r\n              width: '100%',\r\n              height: '100%',\r\n              transformStyle: 'preserve-3d',\r\n              transition: 'transform 0.6s',\r\n              transform: isFlipped ? 'rotateY(180deg)' : 'rotateY(0deg)',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            {/* Front of card */}\r\n            <div style={{\r\n              position: 'absolute',\r\n              width: '100%',\r\n              height: '100%',\r\n              backfaceVisibility: 'hidden',\r\n              backgroundColor: 'rgba(30,30,50,0.9)',\r\n              border: `3px solid ${flashcardData.theme.primaryColor}`,\r\n              borderRadius: '15px',\r\n              padding: '15px',\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              backdropFilter: 'blur(10px)'\r\n            }}>\r\n              <div style={{ fontSize: '14px', marginBottom: '20px', opacity: 0.7, color: 'white' }}>\r\n                FRONT - Click to flip\r\n              </div>\r\n              <h3 style={{\r\n                fontSize: '18px',\r\n                textAlign: 'center',\r\n                margin: 0,\r\n                lineHeight: '1.4',\r\n                color: 'white'\r\n              }}>\r\n                {currentCard.front}\r\n              </h3>\r\n              \r\n              {/* Difficulty Badge */}\r\n              <div style={{\r\n                position: 'absolute',\r\n                top: '15px',\r\n                right: '15px',\r\n                backgroundColor: getDifficultyColor(currentCard.difficulty),\r\n                color: 'white',\r\n                padding: '5px 12px',\r\n                borderRadius: '15px',\r\n                fontSize: '12px',\r\n                fontWeight: 'bold',\r\n                textTransform: 'uppercase'\r\n              }}>\r\n                {currentCard.difficulty}\r\n              </div>\r\n\r\n              {/* Tags */}\r\n              <div style={{\r\n                position: 'absolute',\r\n                bottom: '15px',\r\n                left: '15px',\r\n                display: 'flex',\r\n                gap: '5px',\r\n                flexWrap: 'wrap'\r\n              }}>\r\n                {currentCard.tags.map((tag, index) => (\r\n                  <span key={index} style={{\r\n                    backgroundColor: 'rgba(255,255,255,0.2)',\r\n                    padding: '3px 8px',\r\n                    borderRadius: '10px',\r\n                    fontSize: '11px',\r\n                    opacity: 0.8\r\n                  }}>\r\n                    #{tag}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Back of card */}\r\n            <div style={{\r\n              position: 'absolute',\r\n              width: '100%',\r\n              height: '100%',\r\n              backfaceVisibility: 'hidden',\r\n              backgroundColor: 'rgba(30,50,30,0.9)',\r\n              border: `3px solid #4caf50`,\r\n              borderRadius: '15px',\r\n              padding: '15px',\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              transform: 'rotateY(180deg)',\r\n              backdropFilter: 'blur(10px)'\r\n            }}>\r\n              <div style={{ fontSize: '14px', marginBottom: '20px', opacity: 0.7, color: 'white' }}>\r\n                BACK - Click to flip\r\n              </div>\r\n              <h3 style={{\r\n                fontSize: '20px',\r\n                textAlign: 'center',\r\n                margin: 0,\r\n                lineHeight: '1.4',\r\n                color: '#4caf50',\r\n                fontWeight: 'bold'\r\n              }}>\r\n                {currentCard.back}\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Hint Section - Moved to navigation area */}\r\n        \r\n        {/* Navigation */}\r\n        <div style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          gap: '20px',\r\n          marginTop: '20px',\r\n          paddingTop: '20px',\r\n          borderTop: '1px solid rgba(255,255,255,0.1)'\r\n        }}>\r\n          <button\r\n            onClick={handlePrevious}\r\n            disabled={currentCardIndex === 0}\r\n            style={{\r\n              background: currentCardIndex === 0 \r\n                ? 'linear-gradient(45deg, #666, #888)' \r\n                : 'linear-gradient(45deg, #9e9e9e, #bdbdbd)',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '15px',\r\n              padding: '12px 24px',\r\n              fontSize: '15px',\r\n              fontWeight: 'bold',\r\n              cursor: currentCardIndex === 0 ? 'not-allowed' : 'pointer',\r\n              opacity: currentCardIndex === 0 ? 0.5 : 1,\r\n              transition: 'transform 0.2s ease',\r\n              minWidth: '110px'\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              if (currentCardIndex !== 0) {\r\n                e.currentTarget.style.transform = 'translateY(-2px)';\r\n              }\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              if (currentCardIndex !== 0) {\r\n                e.currentTarget.style.transform = 'translateY(0)';\r\n              }\r\n            }}\r\n          >\r\n            ⬅ Previous\r\n          </button>\r\n\r\n          {/* Hint Button - Repositioned here */}\r\n          {currentCard.hint && (\r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n              {!showHint ? (\r\n                <button\r\n                  onClick={handleShowHint}\r\n                  style={{\r\n                    backgroundColor: '#ff9800',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    padding: '8px 15px',\r\n                    borderRadius: '15px',\r\n                    fontSize: '12px',\r\n                    fontWeight: 'bold',\r\n                    cursor: 'pointer',\r\n                    transition: 'transform 0.2s ease'\r\n                  }}\r\n                  onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n                  onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n                >\r\n                  💡 Hint\r\n                </button>\r\n              ) : (\r\n                <div style={{\r\n                  backgroundColor: 'rgba(255, 193, 7, 0.9)',\r\n                  border: '2px solid #ffc107',\r\n                  borderRadius: '8px',\r\n                  padding: '8px 12px',\r\n                  fontSize: '12px',\r\n                  fontWeight: 'bold',\r\n                  color: '#000',\r\n                  maxWidth: '150px',\r\n                  textAlign: 'center',\r\n                  position: 'absolute',\r\n                  bottom: '70px',\r\n                  zIndex: 10\r\n                }}>\r\n                  💡 {currentCard.hint}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          <button\r\n            onClick={handleFlip}\r\n            style={{\r\n              background: 'linear-gradient(45deg, #2196f3, #42a5f5)',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '15px',\r\n              padding: '12px 24px',\r\n              fontSize: '15px',\r\n              fontWeight: 'bold',\r\n              cursor: 'pointer',\r\n              transition: 'transform 0.2s ease',\r\n              minWidth: '130px'\r\n            }}\r\n            onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n            onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n          >\r\n            🔄 Flip Card\r\n          </button>\r\n\r\n          {currentCardIndex === totalCards - 1 ? (\r\n            <button\r\n              onClick={handleComplete}\r\n              style={{\r\n                background: 'linear-gradient(45deg, #4caf50, #66bb6a)',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '15px',\r\n                padding: '12px 24px',\r\n                fontSize: '15px',\r\n                fontWeight: 'bold',\r\n                cursor: 'pointer',\r\n                transition: 'transform 0.2s ease',\r\n                minWidth: '110px'\r\n              }}\r\n              onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n              onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n            >\r\n              ✅ Complete\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={handleNext}\r\n              style={{\r\n                background: 'linear-gradient(45deg, #4caf50, #66bb6a)',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '15px',\r\n                padding: '12px 24px',\r\n                fontSize: '15px',\r\n                fontWeight: 'bold',\r\n                cursor: 'pointer',\r\n                transition: 'transform 0.2s ease',\r\n                minWidth: '110px'\r\n              }}\r\n              onMouseEnter={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n              onMouseLeave={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n            >\r\n              Next ➡\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}; ","import React, { useState } from 'react';\r\nimport { QuizComponent } from '../components/QuizComponent';\r\nimport { TimelineComponent } from '../components/timeline/TimelineComponent';\r\nimport { MindmapComponent } from '../components/mindmap/MindmapComponent';\r\nimport { FlashcardComponent } from '../components/flashcard/FlashcardComponent';\r\nimport { QuizData, QuizSubtype } from '../types/quiz';\r\nimport { TimelineData } from '../types/timeline';\r\nimport { MindmapData } from '../types/mindmap';\r\nimport { FlashcardData } from '../types/flashcard';\r\n\r\nexport const WhizardPage = () => {\r\n  const [userContent, setUserContent] = useState('');\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [activeQuiz, setActiveQuiz] = useState<QuizData | null>(null);\r\n  const [isQuizOpen, setIsQuizOpen] = useState(false);\r\n  const [activeTimeline, setActiveTimeline] = useState<TimelineData | null>(null);\r\n  const [isTimelineOpen, setIsTimelineOpen] = useState(false);\r\n  const [activeMindmap, setActiveMindmap] = useState<MindmapData | null>(null);\r\n  const [isMindmapOpen, setIsMindmapOpen] = useState(false);\r\n  const [activeFlashcard, setActiveFlashcard] = useState<FlashcardData | null>(null);\r\n  const [isFlashcardOpen, setIsFlashcardOpen] = useState(false);\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [conversationId, setConversationId] = useState<string | null>(null);\r\n  const [topics, setTopics] = useState<string[]>([]);\r\n  const [selectedTopics, setSelectedTopics] = useState<string[]>([]);\r\n  const [showTopics, setShowTopics] = useState(false);\r\n\r\n  const handleGenerateElements = async () => {\r\n    if (!userContent.trim() && !selectedFile) {\r\n      alert('Please enter some content or upload a file first!');\r\n      return;\r\n    }\r\n    setIsGenerating(true);\r\n    \r\n    try {\r\n      // Step 1: Upload content to backend\r\n      const formData = new FormData();\r\n      \r\n      if (selectedFile) {\r\n        formData.append('files', selectedFile);\r\n      }\r\n      if (userContent.trim()) {\r\n        formData.append('text', userContent);\r\n      }\r\n      \r\n      const uploadResponse = await fetch('http://localhost:8000/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      \r\n      if (!uploadResponse.ok) {\r\n        throw new Error(`Upload failed: ${uploadResponse.status}`);\r\n      }\r\n      \r\n      const uploadResult = await uploadResponse.json();\r\n      const convId = uploadResult.conversation_id;\r\n      setConversationId(convId);\r\n      \r\n      // Step 2: Get topics\r\n      const topicsFormData = new FormData();\r\n      topicsFormData.append('conversation_id', convId);\r\n      \r\n      const topicsResponse = await fetch('http://localhost:8000/topics', {\r\n        method: 'POST',\r\n        body: topicsFormData,\r\n      });\r\n      \r\n      if (!topicsResponse.ok) {\r\n        throw new Error(`Topics failed: ${topicsResponse.status}`);\r\n      }\r\n      \r\n      const topicsResult = await topicsResponse.json();\r\n      setTopics(topicsResult.topics);\r\n      setShowTopics(true);\r\n      setIsGenerating(false);\r\n      \r\n    } catch (error) {\r\n      console.error('Failed to process content:', error);\r\n      alert('Failed to process content. Using demo mode.');\r\n      setIsGenerating(false);\r\n      setShowOptions(true);\r\n    }\r\n  };\r\n\r\n  const handleTopicSelection = (topic: string) => {\r\n    setSelectedTopics(prev => \r\n      prev.includes(topic) \r\n        ? prev.filter(t => t !== topic)\r\n        : [...prev, topic]\r\n    );\r\n  };\r\n\r\n  const handleGenerateQuiz = async () => {\r\n    if (selectedTopics.length === 0) {\r\n      alert('Please select at least one topic!');\r\n      return;\r\n    }\r\n    \r\n    if (!conversationId) {\r\n      alert('No conversation ID found. Please upload content first.');\r\n      return;\r\n    }\r\n    \r\n    setIsGenerating(true);\r\n    \r\n    try {\r\n      // Step 3: Generate quiz with selected topics\r\n      const formData = new FormData();\r\n      formData.append('conversation_id', conversationId);\r\n      selectedTopics.forEach(topic => {\r\n        formData.append('topics', topic);\r\n      });\r\n      \r\n      const response = await fetch('http://localhost:8000/interact', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      // The API returns: { quiz_data: {...}, status: \"success\", message: \"...\" }\r\n      setActiveQuiz(result.quiz_data);\r\n      setIsQuizOpen(true);\r\n      \r\n    } catch (error) {\r\n      console.error('Failed to generate quiz:', error);\r\n      alert('Failed to generate quiz. Using demo mode.');\r\n      \r\n      // Fallback to dummy data for testing\r\n      const dummyQuizResponse = generateDummyQuizJSON();\r\n      setActiveQuiz(dummyQuizResponse);\r\n      setIsQuizOpen(true);\r\n    }\r\n    \r\n    setIsGenerating(false);\r\n  };\r\n\r\n  const handleGenerateTimeline = async () => {\r\n    if (selectedTopics.length === 0) {\r\n      alert('Please select at least one topic!');\r\n      return;\r\n    }\r\n    \r\n    if (!conversationId) {\r\n      alert('No conversation ID found. Please upload content first.');\r\n      return;\r\n    }\r\n    \r\n    setIsGenerating(true);\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('conversation_id', conversationId);\r\n      selectedTopics.forEach(topic => {\r\n        formData.append('topics', topic);\r\n      });\r\n      \r\n      const response = await fetch('http://localhost:8000/interact-timeline', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      if (result.status === \"rejected\") {\r\n        // Timeline was rejected - still show component with rejection message\r\n        setActiveTimeline(result.timeline_data);\r\n        setIsTimelineOpen(true);\r\n      } else {\r\n        setActiveTimeline(result.timeline_data);\r\n        setIsTimelineOpen(true);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Failed to generate timeline:', error);\r\n      alert('Failed to generate timeline. Please try again.');\r\n    }\r\n    \r\n    setIsGenerating(false);\r\n  };\r\n\r\n  const handleGenerateMindmap = async () => {\r\n    if (selectedTopics.length === 0) {\r\n      alert('Please select at least one topic!');\r\n      return;\r\n    }\r\n    \r\n    if (!conversationId) {\r\n      alert('No conversation ID found. Please upload content first.');\r\n      return;\r\n    }\r\n    \r\n    setIsGenerating(true);\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('conversation_id', conversationId);\r\n      selectedTopics.forEach(topic => {\r\n        formData.append('topics', topic);\r\n      });\r\n      \r\n      const response = await fetch('http://localhost:8000/interact-mindmap', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      setActiveMindmap(result.mindmap_data);\r\n      setIsMindmapOpen(true);\r\n      \r\n    } catch (error) {\r\n      console.error('Failed to generate mindmap:', error);\r\n      alert('Failed to generate mindmap. Please try again.');\r\n    }\r\n    \r\n    setIsGenerating(false);\r\n  };\r\n\r\n  const handleGenerateFlashcard = async () => {\r\n    if (selectedTopics.length === 0) {\r\n      alert('Please select at least one topic!');\r\n      return;\r\n    }\r\n    \r\n    if (!conversationId) {\r\n      alert('No conversation ID found. Please upload content first.');\r\n      return;\r\n    }\r\n    \r\n    setIsGenerating(true);\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('conversation_id', conversationId);\r\n      selectedTopics.forEach(topic => {\r\n        formData.append('topics', topic);\r\n      });\r\n      \r\n      const response = await fetch('http://localhost:8000/interact-flashcard', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      setActiveFlashcard(result.flashcard_data);\r\n      setIsFlashcardOpen(true);\r\n      \r\n    } catch (error) {\r\n      console.error('Failed to generate flashcard:', error);\r\n      alert('Failed to generate flashcard. Please try again.');\r\n    }\r\n    \r\n    setIsGenerating(false);\r\n  };\r\n\r\n  const handleOptionClick = async (option: string) => {\r\n    if (option === 'quiz') {\r\n      await handleGenerateQuiz();\r\n    } else if (option === 'timeline') {\r\n      await handleGenerateTimeline();\r\n    } else if (option === 'mindmap') {\r\n      await handleGenerateMindmap();\r\n    } else if (option === 'flashcards') {\r\n      await handleGenerateFlashcard();\r\n    } else {\r\n      alert(`${option} is currently in development. Coming soon!`);\r\n    }\r\n  };\r\n\r\n  const [currentQuizIndex, setCurrentQuizIndex] = useState(0);\r\n  \r\n  const generateDummyQuizJSON = (): QuizData => {\r\n    // Demo: cycle through quiz types one by one for easy testing\r\n    const subtypes: QuizSubtype[] = ['MCQ', 'TrueFalse', 'FillBlanks', 'MatchFollowing'];\r\n    const currentSubtype = subtypes[currentQuizIndex];\r\n    \r\n    // Move to next quiz type for next time\r\n    setCurrentQuizIndex((prev) => (prev + 1) % subtypes.length);\r\n    \r\n    const baseTheme = {\r\n      primaryColor: '#16213e',\r\n      secondaryColor: '#0f3460',\r\n      backgroundColor: '#1a1a2e',\r\n      textColor: '#e0dede',\r\n      fontFamily: 'Arial',\r\n      animation: 'slide-in'\r\n    };\r\n\r\n    switch (currentSubtype) {\r\n      case 'MCQ':\r\n        return {\r\n          subtype: 'MCQ',\r\n          theme: baseTheme,\r\n          title: 'Multiple Choice Quiz',\r\n          description: 'Choose the best answer for each question.',\r\n          questions: [\r\n            {\r\n              id: 1,\r\n              question: \"What is the capital of Japan?\",\r\n              options: [\"Seoul\", \"Tokyo\", \"Beijing\", \"Bangkok\"],\r\n              correctAnswer: 1,\r\n              explanation: \"Tokyo is the capital and largest city of Japan.\"\r\n            },\r\n            {\r\n              id: 2,\r\n              question: \"Which planet is known as the Red Planet?\",\r\n              options: [\"Venus\", \"Mars\", \"Jupiter\", \"Saturn\"],\r\n              correctAnswer: 1,\r\n              explanation: \"Mars is called the Red Planet due to iron oxide on its surface.\"\r\n            },\r\n            {\r\n              id: 3,\r\n              question: \"Who wrote 'Romeo and Juliet'?\",\r\n              options: [\"Charles Dickens\", \"William Shakespeare\", \"Jane Austen\", \"Mark Twain\"],\r\n              correctAnswer: 1,\r\n              explanation: \"Romeo and Juliet is a tragedy written by William Shakespeare.\"\r\n            },\r\n            {\r\n              id: 4,\r\n              question: \"What is the largest ocean on Earth?\",\r\n              options: [\"Atlantic Ocean\", \"Indian Ocean\", \"Arctic Ocean\", \"Pacific Ocean\"],\r\n              correctAnswer: 3,\r\n              explanation: \"The Pacific Ocean covers about 46% of the water surface of Earth.\"\r\n            },\r\n            {\r\n              id: 5,\r\n              question: \"Which gas makes up most of Earth's atmosphere?\",\r\n              options: [\"Oxygen\", \"Carbon Dioxide\", \"Nitrogen\", \"Hydrogen\"],\r\n              correctAnswer: 2,\r\n              explanation: \"Nitrogen makes up about 78% of Earth's atmosphere.\"\r\n            }\r\n          ]\r\n        };\r\n\r\n      case 'TrueFalse':\r\n        return {\r\n          subtype: 'TrueFalse',\r\n          theme: { ...baseTheme, backgroundColor: '#0f0f0f', textColor: '#d0f0ff' },\r\n          title: 'True or False Quiz',\r\n          description: 'Determine whether each statement is true or false.',\r\n          questions: [\r\n            {\r\n              id: 1,\r\n              statement: \"The Earth is the third planet from the Sun.\",\r\n              correctAnswer: true,\r\n              hint: \"Think about the order: Mercury, Venus, then what?\",\r\n              explanation: \"Yes, Earth is the third planet from the Sun after Mercury and Venus.\"\r\n            },\r\n            {\r\n              id: 2,\r\n              statement: \"Water boils at 90°C at sea level.\",\r\n              correctAnswer: false,\r\n              hint: \"Remember the temperature when water bubbles on your stove.\",\r\n              explanation: \"False. Water boils at 100°C (212°F) at sea level.\"\r\n            },\r\n            {\r\n              id: 3,\r\n              statement: \"Humans have five senses.\",\r\n              correctAnswer: true,\r\n              hint: \"Count them: sight, hearing, taste, smell, and one more.\",\r\n              explanation: \"True. The five senses are sight, hearing, taste, smell, and touch.\"\r\n            },\r\n            {\r\n              id: 4,\r\n              statement: \"Lightning never strikes the same place twice.\",\r\n              correctAnswer: false,\r\n              hint: \"Think about tall buildings and lightning rods.\",\r\n              explanation: \"False. Lightning can and often does strike the same place multiple times.\"\r\n            },\r\n            {\r\n              id: 5,\r\n              statement: \"The Great Wall of China is visible from space.\",\r\n              correctAnswer: false,\r\n              hint: \"Consider how wide the wall actually is compared to the distance from space.\",\r\n              explanation: \"False. The Great Wall is not visible from space with the naked eye.\"\r\n            }\r\n          ]\r\n        };\r\n\r\n      case 'FillBlanks':\r\n        return {\r\n          subtype: 'FillBlanks',\r\n          theme: { ...baseTheme, backgroundColor: '#1c1c1c', textColor: '#f0e6d2' },\r\n          title: 'Fill in the Blanks',\r\n          description: 'Complete each sentence by filling in the missing word.',\r\n          questions: [\r\n            {\r\n              id: 1,\r\n              sentence: \"The first man to walk on the moon was Neil [BLANK].\",\r\n              correctAnswers: [\"Armstrong\"],\r\n              hint: \"His last name is also a word meaning strong arm.\",\r\n              explanation: \"Neil Armstrong was the first person to walk on the moon in 1969.\"\r\n            },\r\n            {\r\n              id: 2,\r\n              sentence: \"World War II ended in the year [BLANK].\",\r\n              correctAnswers: [\"1945\"],\r\n              hint: \"It was in the mid-1940s, after lasting about 6 years.\",\r\n              explanation: \"World War II officially ended in 1945 with Japan's surrender.\"\r\n            },\r\n            {\r\n              id: 3,\r\n              sentence: \"The largest continent by area is [BLANK].\",\r\n              correctAnswers: [\"Asia\"],\r\n              hint: \"It's home to countries like China, India, and Russia.\",\r\n              explanation: \"Asia is the largest continent covering about 30% of Earth's land area.\"\r\n            },\r\n            {\r\n              id: 4,\r\n              sentence: \"The currency used in Japan is the [BLANK].\",\r\n              correctAnswers: [\"Yen\"],\r\n              hint: \"It's a three-letter word starting with Y.\",\r\n              explanation: \"The Japanese Yen is the official currency of Japan.\"\r\n            },\r\n            {\r\n              id: 5,\r\n              sentence: \"The study of earthquakes is called [BLANK].\",\r\n              correctAnswers: [\"Seismology\"],\r\n              hint: \"It starts with 'seismo' which relates to shaking or vibration.\",\r\n              explanation: \"Seismology is the scientific study of earthquakes and seismic waves.\"\r\n            }\r\n          ]\r\n        };\r\n\r\n      case 'MatchFollowing':\r\n        return {\r\n          subtype: 'MatchFollowing',\r\n          theme: { ...baseTheme, backgroundColor: '#202020', textColor: '#ffffff' },\r\n          title: 'Match the Following',\r\n          description: 'Match items from the left column with their corresponding items on the right.',\r\n          questions: [\r\n                          {\r\n                id: 1,\r\n                instruction: \"Match each person/place with their correct category:\",\r\n                              pairs: [\r\n                { id: 1, left: \"Shakespeare\", right: \"Writer\" },\r\n                { id: 2, left: \"Paris\", right: \"Capital\" },\r\n                { id: 3, left: \"Einstein\", right: \"Scientist\" },\r\n                { id: 4, left: \"Piano\", right: \"Instrument\" },\r\n                { id: 5, left: \"Pacific\", right: \"Ocean\" }\r\n              ]\r\n              }\r\n          ]\r\n        };\r\n\r\n      default:\r\n        // Fallback to MCQ\r\n        return {\r\n          subtype: 'MCQ',\r\n          theme: baseTheme,\r\n          title: 'Quiz',\r\n          questions: []\r\n        };\r\n    }\r\n  };\r\n\r\n  const handleQuizClose = () => {\r\n    setIsQuizOpen(false);\r\n    setActiveQuiz(null);\r\n  };\r\n\r\n  const handleQuizComplete = (score: number, totalQuestions: number) => {\r\n    // Quiz completion is now handled in-page by the quiz component\r\n    // User will click \"Home\" button to close\r\n  };\r\n\r\n  const handleTimelineClose = () => {\r\n    setIsTimelineOpen(false);\r\n    setActiveTimeline(null);\r\n  };\r\n\r\n  const handleTimelineComplete = () => {\r\n    // Timeline completion logic (optional)\r\n  };\r\n\r\n  const handleMindmapClose = () => {\r\n    setIsMindmapOpen(false);\r\n    setActiveMindmap(null);\r\n  };\r\n\r\n  const handleMindmapComplete = () => {\r\n    // Mindmap completion logic (optional)\r\n  };\r\n\r\n  const handleFlashcardClose = () => {\r\n    setIsFlashcardOpen(false);\r\n    setActiveFlashcard(null);\r\n  };\r\n\r\n  const handleFlashcardComplete = () => {\r\n    // Flashcard completion logic (optional)\r\n  };\r\n\r\n  const handleReset = () => {\r\n    // Reset all state to initial values\r\n    setUserContent('');\r\n    setSelectedFile(null);\r\n    setShowOptions(false);\r\n    setActiveQuiz(null);\r\n    setIsQuizOpen(false);\r\n    setActiveTimeline(null);\r\n    setIsTimelineOpen(false);\r\n    setActiveMindmap(null);\r\n    setIsMindmapOpen(false);\r\n    setActiveFlashcard(null);\r\n    setIsFlashcardOpen(false);\r\n    setIsGenerating(false);\r\n    setConversationId(null);\r\n    setTopics([]);\r\n    setSelectedTopics([]);\r\n    setShowTopics(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      minHeight: '100vh',\r\n      background: 'linear-gradient(135deg, #000000 0%, #1a1a1a 50%, #2d2d2d 100%)',\r\n      color: '#ffffff',\r\n      fontFamily: 'Arial, sans-serif'\r\n    }}>\r\n      {/* Header */}\r\n      <div style={{\r\n        background: 'rgba(0,0,0,0.5)',\r\n        padding: '20px',\r\n        borderBottom: '2px solid #4caf50'\r\n      }}>\r\n        <h1 style={{\r\n          margin: 0,\r\n          textAlign: 'center',\r\n          fontSize: '2.5rem',\r\n          background: 'linear-gradient(45deg, #4caf50, #66bb6a, #81c784)',\r\n          WebkitBackgroundClip: 'text',\r\n          WebkitTextFillColor: 'transparent',\r\n          textShadow: '0 0 20px rgba(76, 175, 80, 0.3)'\r\n        }}>\r\n          🧙‍♂️ WhizardLM\r\n        </h1>\r\n        <p style={{\r\n          textAlign: 'center',\r\n          margin: '10px 0 0 0',\r\n          opacity: 0.8,\r\n          fontSize: '1.1rem'\r\n        }}>\r\n          AI-Powered Interactive Learning Platform\r\n        </p>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: '40px 20px',\r\n        maxWidth: '1000px',\r\n        margin: '0 auto'\r\n      }}>\r\n        {/* Content Input */}\r\n        <div style={{\r\n          width: '100%',\r\n          marginBottom: '30px',\r\n          background: 'rgba(255,255,255,0.05)',\r\n          borderRadius: '15px',\r\n          padding: '30px',\r\n          border: '1px solid rgba(255,255,255,0.1)'\r\n        }}>\r\n          <h2 style={{ margin: '0 0 20px 0', color: '#4caf50' }}>📝 Enter Your Learning Content</h2>\r\n          \r\n          {/* Text Input */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <label style={{ display: 'block', marginBottom: '10px', color: '#4caf50' }}>Option 1: Paste Text Content</label>\r\n            <textarea\r\n              value={userContent}\r\n              onChange={(e) => {\r\n                setUserContent(e.target.value);\r\n                if (e.target.value.trim()) setSelectedFile(null); // Clear file if text is entered\r\n              }}\r\n              placeholder=\"Paste your text content here... (articles, documents, notes, etc.)\"\r\n              style={{\r\n                width: '100%',\r\n                height: '150px',\r\n                background: 'rgba(0,0,0,0.3)',\r\n                border: '2px solid #16213e',\r\n                borderRadius: '10px',\r\n                padding: '15px',\r\n                color: '#e0dede',\r\n                fontSize: '16px',\r\n                fontFamily: 'Arial, sans-serif',\r\n                resize: 'vertical'\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {/* OR Separator */}\r\n          <div style={{ textAlign: 'center', margin: '20px 0', color: '#888' }}>\r\n            <span style={{ background: 'rgba(255,255,255,0.05)', padding: '5px 15px', borderRadius: '15px' }}>OR</span>\r\n          </div>\r\n\r\n          {/* File Upload */}\r\n          <div>\r\n            <label style={{ display: 'block', marginBottom: '10px', color: '#4caf50' }}>Option 2: Upload File (PDF, TXT)</label>\r\n            <div style={{\r\n              border: '2px dashed #16213e',\r\n              borderRadius: '10px',\r\n              padding: '20px',\r\n              textAlign: 'center',\r\n              background: 'rgba(0,0,0,0.2)',\r\n              cursor: 'pointer',\r\n              transition: 'all 0.3s ease'\r\n            }}\r\n            onDragOver={(e) => e.preventDefault()}\r\n            onDrop={(e) => {\r\n              e.preventDefault();\r\n              const files = e.dataTransfer.files;\r\n              if (files.length > 0) {\r\n                setSelectedFile(files[0]);\r\n                setUserContent(''); // Clear text if file is uploaded\r\n              }\r\n            }}>\r\n              <input\r\n                type=\"file\"\r\n                id=\"file-upload\"\r\n                accept=\".pdf,.txt\"\r\n                onChange={(e) => {\r\n                  if (e.target.files && e.target.files[0]) {\r\n                    setSelectedFile(e.target.files[0]);\r\n                    setUserContent(''); // Clear text if file is uploaded\r\n                  }\r\n                }}\r\n                style={{ display: 'none' }}\r\n              />\r\n              <label htmlFor=\"file-upload\" style={{ cursor: 'pointer', color: '#4caf50' }}>\r\n                <div style={{ fontSize: '2rem', marginBottom: '10px' }}>📄</div>\r\n                {selectedFile ? (\r\n                  <div>\r\n                    <div style={{ color: '#4caf50', fontWeight: 'bold' }}>✅ {selectedFile.name}</div>\r\n                    <div style={{ color: '#888', fontSize: '14px' }}>Click to change file</div>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <div>Click to upload or drag & drop</div>\r\n                    <div style={{ color: '#888', fontSize: '14px' }}>Supported: PDF, TXT files</div>\r\n                  </div>\r\n                )}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Generate and Reset Buttons */}\r\n        <div style={{ display: 'flex', gap: '20px', justifyContent: 'center', marginBottom: '40px' }}>\r\n          <button\r\n            onClick={handleGenerateElements}\r\n            disabled={isGenerating}\r\n            style={{\r\n              background: isGenerating \r\n                ? 'linear-gradient(45deg, #666, #888)' \r\n                : 'linear-gradient(45deg, #4caf50, #66bb6a)',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '25px',\r\n              padding: '15px 40px',\r\n              fontSize: '18px',\r\n              fontWeight: 'bold',\r\n              cursor: isGenerating ? 'not-allowed' : 'pointer',\r\n              transition: 'all 0.3s ease',\r\n              boxShadow: '0 4px 20px rgba(76, 175, 80, 0.3)'\r\n            }}\r\n          >\r\n            {isGenerating ? '🔄 Processing Content...' : '📄 Topics'}\r\n          </button>\r\n\r\n          {(showTopics || showOptions) && (\r\n            <button\r\n              onClick={handleReset}\r\n              style={{\r\n                background: 'linear-gradient(45deg, #ff5722, #ff7043)',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '25px',\r\n                padding: '15px 30px',\r\n                fontSize: '18px',\r\n                fontWeight: 'bold',\r\n                cursor: 'pointer',\r\n                transition: 'all 0.3s ease',\r\n                boxShadow: '0 4px 20px rgba(255, 87, 34, 0.3)'\r\n              }}\r\n            >\r\n              🔄 Reset\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Topic Selection */}\r\n        {showTopics && (\r\n          <div style={{\r\n            width: '100%',\r\n            marginBottom: '30px',\r\n            background: 'rgba(255,255,255,0.05)',\r\n            borderRadius: '15px',\r\n            padding: '30px',\r\n            border: '1px solid rgba(255,255,255,0.1)',\r\n            animation: 'fadeIn 0.5s ease-in'\r\n          }}>\r\n            <h3 style={{ margin: '0 0 20px 0', color: '#4caf50' }}>🎯 Select Topics for Interactive Generation</h3>\r\n            <p style={{ color: '#888', marginBottom: '20px' }}>\r\n              Choose one or more topics from your content to generate a focused quiz:\r\n            </p>\r\n            <div style={{\r\n              display: 'grid',\r\n              gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\r\n              gap: '15px',\r\n              marginBottom: '20px'\r\n            }}>\r\n              {topics.map((topic, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => handleTopicSelection(topic)}\r\n                  style={{\r\n                    background: selectedTopics.includes(topic) \r\n                      ? 'linear-gradient(45deg, #4caf50, #66bb6a)' \r\n                      : 'rgba(255,255,255,0.1)',\r\n                    color: selectedTopics.includes(topic) ? 'white' : '#e0dede',\r\n                    border: selectedTopics.includes(topic) \r\n                      ? '2px solid #4caf50' \r\n                      : '2px solid #16213e',\r\n                    borderRadius: '10px',\r\n                    padding: '15px',\r\n                    fontSize: '14px',\r\n                    cursor: 'pointer',\r\n                    transition: 'all 0.3s ease',\r\n                    textAlign: 'center'\r\n                  }}\r\n                >\r\n                  {selectedTopics.includes(topic) && '✅ '}\r\n                  {topic}\r\n                </button>\r\n              ))}\r\n            </div>\r\n            <div style={{ textAlign: 'center' }}>\r\n              <button\r\n                onClick={() => setShowOptions(true)}\r\n                disabled={selectedTopics.length === 0}\r\n                style={{\r\n                  background: selectedTopics.length === 0 \r\n                    ? 'linear-gradient(45deg, #666, #888)' \r\n                    : 'linear-gradient(45deg, #ff9800, #ffb74d)',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  borderRadius: '20px',\r\n                  padding: '12px 30px',\r\n                  fontSize: '16px',\r\n                  fontWeight: 'bold',\r\n                  cursor: selectedTopics.length === 0 ? 'not-allowed' : 'pointer',\r\n                  transition: 'all 0.3s ease'\r\n                }}\r\n              >\r\n                🎯 Proceed to Interactive Elements ({selectedTopics.length} topics selected)\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Options */}\r\n        {showOptions && (\r\n          <div style={{\r\n            width: '100%',\r\n            background: 'rgba(255,255,255,0.05)',\r\n            borderRadius: '15px',\r\n            padding: '30px',\r\n            border: '1px solid rgba(255,255,255,0.1)',\r\n            animation: 'fadeIn 0.5s ease-in'\r\n          }}>\r\n            <h3 style={{ textAlign: 'center', marginBottom: '30px', color: '#4caf50' }}>\r\n              🎯 Choose an Interactive Element:\r\n            </h3>\r\n            <div style={{\r\n              display: 'grid',\r\n              gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\r\n              gap: '20px'\r\n            }}>\r\n              {[\r\n                { name: 'Quiz', icon: '🧠', color: '#4caf50', id: 'quiz' },\r\n                { name: 'Timeline', icon: '⏰', color: '#ff9800', id: 'timeline' },\r\n                { name: 'Mind Map', icon: '🗺️', color: '#9c27b0', id: 'mindmap' },\r\n                { name: 'Flashcards', icon: '📚', color: '#f44336', id: 'flashcards' }\r\n              ].map((option) => (\r\n                <button\r\n                  key={option.id}\r\n                  onClick={() => handleOptionClick(option.id)}\r\n                  style={{\r\n                    background: `linear-gradient(45deg, ${option.color}, ${option.color}dd)`,\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '15px',\r\n                    padding: '20px',\r\n                    fontSize: '16px',\r\n                    fontWeight: 'bold',\r\n                    cursor: 'pointer',\r\n                    transition: 'transform 0.2s ease',\r\n                    textAlign: 'center'\r\n                  }}\r\n                  onMouseOver={(e) => e.currentTarget.style.transform = 'translateY(-3px)'}\r\n                  onMouseOut={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n                >\r\n                  <div style={{ fontSize: '2rem', marginBottom: '10px' }}>{option.icon}</div>\r\n                  {option.name}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Quiz Component */}\r\n      {activeQuiz && (\r\n        <QuizComponent\r\n          quizData={activeQuiz}\r\n          isOpen={isQuizOpen}\r\n          onClose={handleQuizClose}\r\n          onComplete={handleQuizComplete}\r\n        />\r\n      )}\r\n\r\n      {/* Timeline Component */}\r\n      {activeTimeline && (\r\n        <TimelineComponent\r\n          timelineData={activeTimeline}\r\n          isOpen={isTimelineOpen}\r\n          onClose={handleTimelineClose}\r\n          onComplete={handleTimelineComplete}\r\n        />\r\n      )}\r\n\r\n      {/* Mindmap Component */}\r\n      {activeMindmap && (\r\n        <MindmapComponent\r\n          mindmapData={activeMindmap}\r\n          isOpen={isMindmapOpen}\r\n          onClose={handleMindmapClose}\r\n          onComplete={handleMindmapComplete}\r\n        />\r\n      )}\r\n\r\n      {/* Flashcard Component */}\r\n      {activeFlashcard && (\r\n        <FlashcardComponent\r\n          flashcardData={activeFlashcard}\r\n          isOpen={isFlashcardOpen}\r\n          onClose={handleFlashcardClose}\r\n          onComplete={handleFlashcardComplete}\r\n        />\r\n      )}\r\n\r\n      <style>\r\n        {`\r\n          @keyframes fadeIn {\r\n            from { opacity: 0; transform: translateY(20px); }\r\n            to { opacity: 1; transform: translateY(0); }\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}; ","import React, { useState } from 'react';\r\nimport { QuizComponent } from '../components/QuizComponent';\r\nimport { QuizData, MCQQuestion, TrueFalseQuestion, FillBlanksQuestion, MatchFollowingQuestion } from '../types/quiz';\r\n\r\nexport const InteractivePage: React.FC = () => {\r\n  const [activeQuiz, setActiveQuiz] = useState<QuizData | null>(null);\r\n  const [isQuizOpen, setIsQuizOpen] = useState(false);\r\n\r\n  // Dummy quiz data for testing\r\n  // const mcqQuizData: QuizData = {\r\n  //   subtype: 'MCQ',\r\n  //   title: 'Nature Quiz - Multiple Choice',\r\n  //   description: 'Test your knowledge about nature and wildlife',\r\n  //   theme: {\r\n  //     primaryColor: '#4CAF50',\r\n  //     secondaryColor: '#81C784',\r\n  //     backgroundColor: '#E8F5E8',\r\n  //     textColor: '#2E7D32',\r\n  //     fontFamily: 'Georgia, serif',\r\n  //     animation: 'nature',\r\n  //     iconSet: 'leaf'\r\n  //   },\r\n  //   questions: [\r\n  //     {\r\n  //       id: 1,\r\n  //       question: 'Which is the largest mammal in the world?',\r\n  //       options: ['Elephant', 'Blue Whale', 'Giraffe', 'Hippopotamus'],\r\n  //       correctAnswer: 1,\r\n  //       explanation: 'The Blue Whale is the largest mammal and largest animal that has ever lived on Earth.'\r\n  //     },\r\n  //     {\r\n  //       id: 2,\r\n  //       question: 'What process do plants use to make their own food?',\r\n  //       options: ['Respiration', 'Photosynthesis', 'Transpiration', 'Pollination'],\r\n  //       correctAnswer: 1,\r\n  //       explanation: 'Photosynthesis is the process by which plants use sunlight, water, and carbon dioxide to create glucose and oxygen.'\r\n  //     }\r\n  //   ]\r\n  // };\r\n\r\n  const mcqQuizData: QuizData = {\r\n      \"subtype\": \"MCQ\",\r\n      \"theme\": {\r\n        \"primaryColor\": \"#2196f3\",\r\n        \"secondaryColor\": \"#1976d2\",\r\n        \"backgroundColor\": \"#0d47a1\",\r\n        \"textColor\": \"#e0dede\",\r\n        \"fontFamily\": \"Arial\",\r\n        \"animation\": \"slide-in\"\r\n      },\r\n      \"title\": \"Metals and Non-metals Quiz\",\r\n      \"description\": \"Test your knowledge about the physical and chemical properties of metals and non-metals.\",\r\n      \"questions\": [\r\n        {\r\n          \"id\": 1,\r\n          \"question\": \"Which property describes the ability of metals to be beaten into thin sheets?\",\r\n          \"options\": [\r\n            \"Ductility\",\r\n            \"Malleability\",\r\n            \"Sonority\",\r\n            \"Conductivity\"\r\n          ],\r\n          \"correctAnswer\": 2,\r\n          \"hint\": \"Think about what happens when you flatten a piece of metal with a hammer.\",\r\n          \"explanation\": \"Malleability is the property of a metal that allows it to be hammered or rolled into thin sheets. Gold and silver are highly malleable.\"\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"question\": \"What is the term for the ability of metals to be drawn into thin wires?\",\r\n          \"options\": [\r\n            \"Malleability\",\r\n            \"Sonority\",\r\n            \"Ductility\",\r\n            \"Lustre\"\r\n          ],\r\n          \"correctAnswer\": 3,\r\n          \"hint\": \"Consider what happens when metal is pulled through a small opening to create a wire.\",\r\n          \"explanation\": \"Ductility is the property of a metal that allows it to be stretched into thin wires. Gold is the most ductile metal.\"\r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"question\": \"Which of the following metals is the best conductor of heat?\",\r\n          \"options\": [\r\n            \"Lead\",\r\n            \"Iron\",\r\n            \"Copper\",\r\n            \"Aluminium\"\r\n          ],\r\n          \"correctAnswer\": 3,\r\n          \"hint\": \"Consider which metal is commonly used in cookware and electrical wiring due to its heat transfer capabilities.\",\r\n          \"explanation\": \"Copper is one of the best conductors of heat, along with silver. This makes it suitable for applications like cooking vessels and heat sinks.\"\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"question\": \"What is the name given to metal oxides that react with both acids and bases?\",\r\n          \"options\": [\r\n            \"Basic Oxides\",\r\n            \"Acidic Oxides\",\r\n            \"Neutral Oxides\",\r\n            \"Amphoteric Oxides\"\r\n          ],\r\n          \"correctAnswer\": 4,\r\n          \"hint\": \"Think about a word that describes something that can act in two different ways.\",\r\n          \"explanation\": \"Amphoteric oxides are metal oxides that exhibit both acidic and basic properties, reacting with both acids and bases to form salts and water.\"\r\n        },\r\n        {\r\n          \"id\": 5,\r\n          \"question\": \"Which of the following non-metals is a liquid at room temperature?\",\r\n          \"options\": [\r\n            \"Carbon\",\r\n            \"Sulphur\",\r\n            \"Bromine\",\r\n            \"Iodine\"\r\n          ],\r\n          \"correctAnswer\": 3,\r\n          \"hint\": \"Consider the state of matter of common non-metals. This element is in the halogen group.\",\r\n          \"explanation\": \"Bromine is the only non-metal that exists as a liquid at room temperature. Other non-metals are typically solids or gases.\"\r\n        },\r\n        {\r\n          \"id\": 6,\r\n          \"question\": \"What is the property of metals that allows them to produce a sound when struck?\",\r\n          \"options\": [\r\n            \"Malleability\",\r\n            \"Ductility\",\r\n            \"Sonority\",\r\n            \"Lustre\"\r\n          ],\r\n          \"correctAnswer\": 3,\r\n          \"hint\": \"Think about why school bells are made of metal.\",\r\n          \"explanation\": \"Sonority is the property of metals that allows them to produce a ringing sound when struck. This is why metals are used in bells and musical instruments.\"\r\n        },\r\n        {\r\n          \"id\": 7,\r\n          \"question\": \"Which of the following metals is stored immersed in kerosene oil?\",\r\n          \"options\": [\r\n            \"Magnesium\",\r\n            \"Aluminium\",\r\n            \"Sodium\",\r\n            \"Iron\"\r\n          ],\r\n          \"correctAnswer\": 3,\r\n          \"hint\": \"This metal reacts very vigorously with water and air.\",\r\n          \"explanation\": \"Sodium is stored immersed in kerosene oil because it reacts vigorously with both air and water, potentially causing a fire.\"\r\n        },\r\n        {\r\n          \"id\": 8,\r\n          \"question\": \"What is the process of forming a thick oxide layer on aluminium called?\",\r\n          \"options\": [\r\n            \"Galvanization\",\r\n            \"Rusting\",\r\n            \"Anodising\",\r\n            \"Alloying\"\r\n          ],\r\n          \"correctAnswer\": 3,\r\n          \"hint\": \"This process enhances the corrosion resistance of aluminum.\",\r\n          \"explanation\": \"Anodising is the process of forming a thick oxide layer on aluminium to increase its corrosion resistance and allow it to be dyed easily.\"\r\n        },\r\n        {\r\n          \"id\": 9,\r\n          \"question\": \"Which allotrope of carbon is known to be the hardest natural substance?\",\r\n          \"options\": [\r\n            \"Graphite\",\r\n            \"Coal\",\r\n            \"Diamond\",\r\n            \"Fullerene\"\r\n          ],\r\n          \"correctAnswer\": 3,\r\n          \"hint\": \"This allotrope is highly valued for its hardness and is used in cutting tools.\",\r\n          \"explanation\": \"Diamond, an allotrope of carbon, is the hardest naturally occurring substance and has a very high melting and boiling point.\"\r\n        },\r\n        {\r\n          \"id\": 10,\r\n          \"question\": \"Which of the following metals does NOT react with water at all?\",\r\n          \"options\": [\r\n            \"Potassium\",\r\n            \"Calcium\",\r\n            \"Magnesium\",\r\n            \"Gold\"\r\n          ],\r\n          \"correctAnswer\": 4,\r\n          \"hint\": \"Consider the reactivity series of metals. This metal is often used in jewelry.\",\r\n          \"explanation\": \"Gold is a very unreactive metal and does not react with water, even at high temperatures. Other metals like potassium, calcium, and magnesium do react with water, albeit at different rates.\"\r\n        }\r\n      ]\r\n    };\r\n\r\n  const trueFalseQuizData: QuizData = {\r\n    subtype: 'TrueFalse',\r\n    title: 'Science Facts - True or False',\r\n    description: 'Determine if these scientific statements are true or false',\r\n    theme: {\r\n      primaryColor: '#2196F3',\r\n      secondaryColor: '#64B5F6',\r\n      backgroundColor: '#E3F2FD',\r\n      textColor: '#1565C0',\r\n      fontFamily: 'Arial, sans-serif',\r\n      animation: 'science',\r\n      iconSet: 'atom'\r\n    },\r\n    questions: [\r\n      {\r\n        id: 1,\r\n        statement: 'The Earth revolves around the Sun.',\r\n        correctAnswer: true,\r\n        explanation: 'This is true. The Earth orbits the Sun, taking approximately 365.25 days to complete one revolution.'\r\n      },\r\n      {\r\n        id: 2,\r\n        statement: 'Water boils at 90 degrees Celsius at sea level.',\r\n        correctAnswer: false,\r\n        explanation: 'This is false. Water boils at 100 degrees Celsius (212°F) at sea level under standard atmospheric pressure.'\r\n      }\r\n    ]\r\n  };\r\n\r\n  const fillBlanksQuizData: QuizData = {\r\n    subtype: 'FillBlanks',\r\n    title: 'History Fill in the Blanks',\r\n    description: 'Complete these historical sentences',\r\n    theme: {\r\n      primaryColor: '#FF9800',\r\n      secondaryColor: '#FFB74D',\r\n      backgroundColor: '#FFF3E0',\r\n      textColor: '#EF6C00',\r\n      fontFamily: 'Times New Roman, serif',\r\n      animation: 'history',\r\n      iconSet: 'scroll'\r\n    },\r\n    questions: [\r\n      {\r\n        id: 1,\r\n        sentence: 'The [BLANK] War lasted from 1939 to [BLANK].',\r\n        correctAnswers: ['World', '1945'],\r\n        explanation: 'World War II was a global conflict that lasted from 1939 to 1945.'\r\n      },\r\n      {\r\n        id: 2,\r\n        sentence: 'The [BLANK] of [BLANK] was signed in 1776.',\r\n        correctAnswers: ['Declaration', 'Independence'],\r\n        explanation: 'The Declaration of Independence was signed on July 4, 1776.'\r\n      }\r\n    ]\r\n  };\r\n\r\n  const matchFollowingQuizData: QuizData = {\r\n    subtype: 'MatchFollowing',\r\n    title: 'Geography Match the Following',\r\n    description: 'Match countries with their capitals',\r\n    theme: {\r\n      primaryColor: '#9C27B0',\r\n      secondaryColor: '#BA68C8',\r\n      backgroundColor: '#F3E5F5',\r\n      textColor: '#7B1FA2',\r\n      fontFamily: 'Verdana, sans-serif',\r\n      animation: 'geography',\r\n      iconSet: 'globe'\r\n    },\r\n    questions: [\r\n      {\r\n        id: 1,\r\n        instruction: 'Match each country with its capital city:',\r\n        pairs: [\r\n          { id: 1, left: 'France', right: 'Paris' },\r\n          { id: 2, left: 'Japan', right: 'Tokyo' },\r\n          { id: 3, left: 'Australia', right: 'Canberra' },\r\n          { id: 4, left: 'Brazil', right: 'Brasília' }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const handleQuizSelect = (quizData: QuizData) => {\r\n    setActiveQuiz(quizData);\r\n    setIsQuizOpen(true);\r\n  };\r\n\r\n  const handleQuizClose = () => {\r\n    setIsQuizOpen(false);\r\n    setActiveQuiz(null);\r\n  };\r\n\r\n  const handleQuizComplete = (score: number, totalQuestions: number) => {\r\n    alert(`Quiz completed! Your score: ${score}/${totalQuestions}`);\r\n    handleQuizClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"interactive-page\" style={{ \r\n      padding: '40px 20px', \r\n      maxWidth: '1200px', \r\n      margin: '0 auto',\r\n      fontFamily: 'Arial, sans-serif'\r\n    }}>\r\n      <h1 style={{ textAlign: 'center', marginBottom: '40px', color: '#333' }}>\r\n        Interactive Learning Components - Phase 1 Demo\r\n      </h1>\r\n      \r\n      <p style={{ textAlign: 'center', marginBottom: '40px', fontSize: '18px', color: '#666' }}>\r\n        Click on any quiz type below to test the Quiz Component with dummy data:\r\n      </p>\r\n\r\n      <div className=\"quiz-buttons\" style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\r\n        gap: '20px',\r\n        marginBottom: '40px'\r\n      }}>\r\n        <button\r\n          onClick={() => handleQuizSelect(mcqQuizData)}\r\n          style={{\r\n            padding: '20px',\r\n            fontSize: '16px',\r\n            backgroundColor: mcqQuizData.theme.primaryColor,\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '10px',\r\n            cursor: 'pointer',\r\n            transition: 'transform 0.2s ease',\r\n            boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\r\n          }}\r\n          onMouseOver={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n          onMouseOut={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n        >\r\n          <h3 style={{ margin: '0 0 10px 0' }}>🌿 Nature MCQ Quiz</h3>\r\n          <p style={{ margin: 0, opacity: 0.9 }}>Multiple Choice Questions about nature and wildlife</p>\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => handleQuizSelect(trueFalseQuizData)}\r\n          style={{\r\n            padding: '20px',\r\n            fontSize: '16px',\r\n            backgroundColor: trueFalseQuizData.theme.primaryColor,\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '10px',\r\n            cursor: 'pointer',\r\n            transition: 'transform 0.2s ease',\r\n            boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\r\n          }}\r\n          onMouseOver={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n          onMouseOut={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n        >\r\n          <h3 style={{ margin: '0 0 10px 0' }}>🔬 Science True/False</h3>\r\n          <p style={{ margin: 0, opacity: 0.9 }}>Test your knowledge of scientific facts</p>\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => handleQuizSelect(fillBlanksQuizData)}\r\n          style={{\r\n            padding: '20px',\r\n            fontSize: '16px',\r\n            backgroundColor: fillBlanksQuizData.theme.primaryColor,\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '10px',\r\n            cursor: 'pointer',\r\n            transition: 'transform 0.2s ease',\r\n            boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\r\n          }}\r\n          onMouseOver={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n          onMouseOut={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n        >\r\n          <h3 style={{ margin: '0 0 10px 0' }}>📜 History Fill Blanks</h3>\r\n          <p style={{ margin: 0, opacity: 0.9 }}>Complete historical sentences</p>\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => handleQuizSelect(matchFollowingQuizData)}\r\n          style={{\r\n            padding: '20px',\r\n            fontSize: '16px',\r\n            backgroundColor: matchFollowingQuizData.theme.primaryColor,\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '10px',\r\n            cursor: 'pointer',\r\n            transition: 'transform 0.2s ease',\r\n            boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\r\n          }}\r\n          onMouseOver={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\r\n          onMouseOut={(e) => e.currentTarget.style.transform = 'translateY(0)'}\r\n        >\r\n          <h3 style={{ margin: '0 0 10px 0' }}>🌍 Geography Matching</h3>\r\n          <p style={{ margin: 0, opacity: 0.9 }}>Match countries with their capitals</p>\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{\r\n        backgroundColor: '#f8f9fa',\r\n        padding: '20px',\r\n        borderRadius: '10px',\r\n        border: '1px solid #dee2e6'\r\n      }}>\r\n        <h3 style={{ color: '#495057', marginTop: 0 }}>Phase 1 Demo Features:</h3>\r\n        <ul style={{ color: '#6c757d', lineHeight: '1.6' }}>\r\n          <li>✅ All 4 quiz subtypes: MCQ, True/False, Fill Blanks, Match Following</li>\r\n          <li>✅ Dynamic theming based on content (colors, fonts, styles)</li>\r\n          <li>✅ Overlay modal rendering</li>\r\n          <li>✅ Progress tracking and navigation</li>\r\n          <li>✅ Score calculation and results display</li>\r\n          <li>✅ Responsive design and hover effects</li>\r\n        </ul>\r\n        <p style={{ color: '#495057', margin: '10px 0 0 0', fontStyle: 'italic' }}>\r\n          Next: Phase 2 will integrate with backend and LLM for dynamic quiz generation!\r\n        </p>\r\n      </div>\r\n\r\n      {activeQuiz && (\r\n        <QuizComponent\r\n          quizData={activeQuiz}\r\n          isOpen={isQuizOpen}\r\n          onClose={handleQuizClose}\r\n          onComplete={handleQuizComplete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}; ","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { WhizardPage } from './pages/WhizardPage';\r\nimport { InteractivePage } from './pages/InteractivePage';\r\nimport './styles/index.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Routes>\r\n          <Route path=\"/\" element={<WhizardPage />} />\r\n          <Route path=\"/old-demo\" element={<InteractivePage />} />\r\n          {/* Add more routes here as needed */}\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './styles/index.css';\r\nimport App from './App';\r\n\r\nconst rootElement = document.getElementById('root');\r\nif (rootElement) {\r\n  const root = ReactDOM.createRoot(rootElement);\r\n  root.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  );\r\n}\r\n"],"sourceRoot":""}